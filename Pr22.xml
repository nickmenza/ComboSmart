<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Pr22</name>
    </assembly>
    <members>
        <member name="T:Pr22.Util.NamespaceDoc">
            <summary>
            General enumerations and classes.
            </summary>
        </member>
        <member name="T:Pr22.Util.HWType">
            <summary>
            Harware module types.
            </summary>
        </member>
        <member name="F:Pr22.Util.HWType.Peripherals">
            <summary>
            Peripheral controller device module.
            </summary>
        </member>
        <member name="F:Pr22.Util.HWType.Scanner">
            <summary>
            Document scanner module.
            </summary>
        </member>
        <member name="F:Pr22.Util.HWType.RFIDReader">
            <summary>
            RFID card reader module.
            </summary>
        </member>
        <member name="F:Pr22.Util.HWType.ContactReader">
            <summary>
            Contact smart card reader module.
            </summary>
        </member>
        <member name="F:Pr22.Util.HWType.MagneticReader">
            <summary>
            Magnetic stripe card reader module.
            </summary>
        </member>
        <member name="T:Pr22.Util.PresenceState">
            <summary>
            Presence detection statuses. Refers to the presence of documents,
            <c>ECard</c> chips, fingers or face.
            </summary>
            <remarks>Not all the states will be reported by the different
            kind of detectors.</remarks>
        </member>
        <member name="F:Pr22.Util.PresenceState.Empty">
            <summary>
            No object detected.
            </summary>
        </member>
        <member name="F:Pr22.Util.PresenceState.Moving">
            <summary>
            Movement is detected.
            </summary>
        </member>
        <member name="F:Pr22.Util.PresenceState.NoMove">
            <summary>
            Document is still on the scanner's object window.
            </summary>
        </member>
        <member name="F:Pr22.Util.PresenceState.Dirty">
            <summary>
            Platen needs cleaning.
            </summary>
        </member>
        <member name="F:Pr22.Util.PresenceState.Present">
            <summary>
            Object is detected.
            </summary>
        </member>
        <member name="F:Pr22.Util.PresenceState.Preparing">
            <summary>
            Preparing to scan.
            </summary>
        </member>
        <member name="T:Pr22.Task.EngineTask">
            <summary>
            List of field references to read by the engine.
            </summary>
        </member>
        <member name="M:Pr22.Task.EngineTask.#ctor">
            <summary>
            New list of field references to read by the engine.
            </summary>
        </member>
        <member name="M:Pr22.Task.EngineTask.Add(Pr22.Processing.FieldSource,Pr22.Processing.FieldId)">
            <summary>
            Appends a data field reference to the list.
            </summary>
            <param name="group">Id of the FieldSource.</param>
            <param name="id">FieldId.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Pr22.Task.EngineTask.Add(Pr22.Processing.FieldReference)">
            <summary>
            Appends a data field reference to the list.
            </summary>
            <param name="field">Data FieldReference.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Pr22.Task.EngineTask.Del(Pr22.Processing.FieldSource,Pr22.Processing.FieldId)">
            <summary>
            Removes a data field reference from the list.
            </summary>
            <param name="group">Id of the FieldSource.</param>
            <param name="id">FieldId.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Pr22.Task.EngineTask.Del(Pr22.Processing.FieldReference)">
            <summary>
            Removes a data field reference from the list.
            </summary>
            <param name="field">Data FieldReference.</param>
            <returns>This object.</returns>
        </member>
        <member name="T:Pr22.Task.ECardTask">
            <summary>
            List of data reading and authentication requirements.
            </summary>
        </member>
        <member name="M:Pr22.Task.ECardTask.#ctor">
            <summary>
            New list of data reading and authentication requirements.
            </summary>
        </member>
        <member name="M:Pr22.Task.ECardTask.Add(Pr22.ECardHandling.File)">
            <summary>
            Appends a file to the list.
            </summary>
            <param name="file">File identifier.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Pr22.Task.ECardTask.Add(Pr22.ECardHandling.File[])">
            <summary>
            Appends an array of files to the list.
            </summary>
            <param name="files">Array of file identifiers.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Pr22.Task.ECardTask.Del(Pr22.ECardHandling.File)">
            <summary>
            Removes a file from the list.
            </summary>
            <param name="file">File identifier.</param>
            <returns>This object.</returns>
        </member>
        <member name="P:Pr22.Task.ECardTask.AuthLevel">
            <summary>
            The required authentication level.
            </summary>
        </member>
        <member name="T:Pr22.NamespaceDoc">
            <summary>
            Control classes of device modules.
            </summary>
        </member>
        <member name="T:Pr22.Peripherals">
            <summary>
            Peripheral controller device module.
            </summary>
        </member>
        <member name="M:Pr22.Peripherals.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:Pr22.Peripherals.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.Peripherals.ToString">
            <summary>
            Returns the name of the device.
            </summary>
            <returns>The name of the device.</returns>
        </member>
        <member name="P:Pr22.Peripherals.Info">
            <summary>
            Returns the device information.
            </summary>
        </member>
        <member name="P:Pr22.Peripherals.PowerControl">
            <summary>
            Returns the <see cref="T:Pr22.Control.PowerControl">power control</see> module of
            the device.
            </summary>
        </member>
        <member name="P:Pr22.Peripherals.StatusLeds">
            <summary>
            Returns the array of the controllable <see cref="T:Pr22.Control.StatusLed"/>s.
            </summary>
        </member>
        <member name="P:Pr22.Peripherals.UserData">
            <summary>
            Returns the user storage data controller class.
            </summary>
        </member>
        <member name="T:Pr22.Peripherals.Information">
            <summary>
            Class for storing information on <see cref="T:Pr22.Peripherals"/>.
            </summary>
        </member>
        <member name="F:Pr22.Peripherals.Information.DeviceName">
            <summary>
            The name of the device.
            </summary>
        </member>
        <member name="M:Pr22.Peripherals.Information.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:Pr22.Peripherals.Information.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.Peripherals.Information.ToVariant">
            <summary>
            Returns the internal variant data to query special device information.
            </summary>
            <returns>The data.</returns>
        </member>
        <member name="T:Pr22.Processing.Document">
            <summary>
            Stores the results of analyzing tasks.
            </summary>
        </member>
        <member name="M:Pr22.Processing.Document.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:Pr22.Processing.Document.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.Processing.Document.ToVariant">
            <summary>
            Returns the internal variant data to access rarely requested information.
            </summary>
            <returns>The data.</returns>
        </member>
        <member name="M:Pr22.Processing.Document.GetFields">
            <summary>
            Returns a list of <see cref="T:Pr22.Processing.FieldReference"/>s from the <c>Document</c>.
            </summary>
            <returns>List of FieldReferences.</returns>
        </member>
        <member name="M:Pr22.Processing.Document.GetFields(Pr22.Task.EngineTask)">
            <summary>
            Returns a list of <see cref="T:Pr22.Processing.FieldReference"/>s from the <c>Document</c>.
            </summary>
            <param name="filter">Filter for the list.</param>
            <returns>List of FieldReferences.</returns>
        </member>
        <member name="M:Pr22.Processing.Document.GetPart(System.Int32)">
            <summary>
            Returns a simple document data of a root <c>Document</c>. It represents the
            result of one analyzer method called for the document before.
            </summary>
            <remarks>
            The <see cref="M:Pr22.Engine.GetRootDocument"/> method returns a so called
            <c>Root document</c> that contains the results of all methods called for
            the current document.
            </remarks>
            <param name="index">The ordinal number of the document part.</param>
            <returns>The document part.</returns>
        </member>
        <member name="M:Pr22.Processing.Document.GetField(Pr22.Processing.FieldSource,Pr22.Processing.FieldId)">
            <summary>
            Returns a <see cref="T:Pr22.Processing.Field"/> of the <c>Document</c>.
            </summary>
            <param name="group">Id of the field source.</param>
            <param name="id">Field Id.</param>
            <returns>Field data.</returns>
        </member>
        <member name="M:Pr22.Processing.Document.GetField(Pr22.Processing.FieldSource,Pr22.Processing.FieldId,System.Int32)">
            <summary>
            Returns a <see cref="T:Pr22.Processing.Field"/> of the <c>Document</c>.
            </summary>
            <param name="group">Id of the field source.</param>
            <param name="id">Field Id.</param>
            <param name="index">Index of the fields having the same Id.</param>
            <returns>Field data.</returns>
        </member>
        <member name="M:Pr22.Processing.Document.GetField(Pr22.Processing.FieldReference)">
            <summary>
            Returns a <see cref="T:Pr22.Processing.Field"/> of the <c>Document</c>.
            </summary>
            <param name="fieldCode">A <see cref="T:Pr22.Processing.FieldReference"/> returned by the <see cref="M:Pr22.Processing.Document.GetFields(Pr22.Task.EngineTask)"/> method.</param>
            <returns>Field data.</returns>
        </member>
        <member name="M:Pr22.Processing.Document.GetStatus">
            <summary>
            Returns the overall <see cref="T:Pr22.Processing.Status"/> of the document.
            </summary>
            <returns>A Status value.</returns>
        </member>
        <member name="M:Pr22.Processing.Document.Save(Pr22.Processing.Document.FileFormat)">
            <summary>
            Saves the document to the memory in a specific <see cref="T:Pr22.Processing.Document.FileFormat">FileFormat</see>.
            </summary>
            <param name="fileFormat">The file format.</param>
            <returns>Output raw memory data.</returns>
        </member>
        <member name="M:Pr22.Processing.Document.op_Addition(Pr22.Processing.Document,Pr22.Processing.Document)">
            <summary>
            With the help of this operator, an integrated <c>Document</c> can be generated. This <c>Document</c> will
            contain field comparison results, summary data and all data of the source documents.
            </summary>
            <remarks>Currently, only the comparison of passport VIZ photo and RFID photo is supported.</remarks>
            <param name="one">A document.</param>
            <param name="other">Other document.</param>
            <returns>The integrated document.</returns>
        </member>
        <member name="M:Pr22.Processing.Document.GetFieldCompareList">
            <summary>
            Returns the results of field value comparisons.
            </summary>
            <returns>Results of field value comparisons.</returns>
        </member>
        <member name="T:Pr22.Processing.Document.FileFormat">
            <summary>
            Document data file formats.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Document.FileFormat.Xml">
            <summary>
            Xml data file.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Document.FileFormat.Zipped">
            <summary>
            Zipped data file.
            </summary>
        </member>
        <member name="T:Pr22.Processing.Status">
            <summary>
            <c>Field</c> status values. Result of checksum calculations, data integrity and environmental specific
            (e.g. expiry) tests.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Status.Ok">
            <summary>
            All checks are passed successfully.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Status.NoChecksum">
            <summary>
            There is no checksum for the field.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Status.Warning">
            <summary>
            Warning occurred.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Status.DataIntegrity">
            <summary>
            Data integrity failed.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Status.OCRWarning">
            <summary>
            OCR warning occurred.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Status.Error">
            <summary>
            Error occurred.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Status.InvalidChar">
            <summary>
            Invalid character found.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Status.InvalidChecksum">
            <summary>
            Invalid checksum value found.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Status.ChecksumError">
            <summary>
            Checksum failed.
            </summary>
        </member>
        <member name="T:Pr22.Processing.Checking">
            <summary>
            <c>Field</c> checking details.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Checking.Missing">
            <summary>
            Mandatory entity is missing.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Checking.SelfCheckOk">
            <summary>
            Self checking is succeeded.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Checking.SelfCheckInvalid">
            <summary>
            Self checking cannot be performed due to invalid data format.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Checking.SelfCheckFalied">
            <summary>
            Self checking is failed.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Checking.FormatOk">
            <summary>
            Format test is succeeded.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Checking.FormatInvalid">
            <summary>
            Format test is failed.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Checking.DateOk">
            <summary>
            Datetime value is not expired.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Checking.DateInvalid">
            <summary>
            Past datetime value is greater than current date.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Checking.DateExpired">
            <summary>
            Datetime value is expired.
            </summary>
        </member>
        <member name="F:Pr22.Processing.Checking.Revoked">
            <summary>
            Certificate has been revoked.
            </summary>
        </member>
        <member name="T:Pr22.Engine">
            <summary>
            Data analyzer module.
            </summary>
        </member>
        <member name="M:Pr22.Engine.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:Pr22.Engine.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.Engine.Analyze(Pr22.Processing.Page,Pr22.Task.EngineTask)">
            <summary>
            Analyzes the image data of an already scanned <see cref="T:Pr22.Processing.Page"/> and returns the textual
            and logical data according to <paramref name="task"/>.
            </summary>
            <remarks>This method has the same role as <see cref="M:Pr22.Processing.Page.Analyze(Pr22.Task.EngineTask)"/>.</remarks>
            <param name="page">A set of images to analyze.</param>
            <param name="task">Specifies data field references to analyze.</param>
            <returns>The result data structure.</returns>
        </member>
        <member name="M:Pr22.Engine.Analyze(Pr22.Processing.BinData)">
            <summary>
            Analyzes binary data.
            </summary>
            <param name="data">Data to analyze.</param>
            <returns>The result data structure.</returns>
        </member>
        <member name="M:Pr22.Engine.GenerateLatentImage(Pr22.Imaging.DocImage,System.String)">
            <summary>
            Generates a decoded IPI image for visual inspection.
            </summary>
            <remarks>This method has the same role as <see cref="M:Pr22.Imaging.DocImage.GenerateLatentImage(System.String)"/>.</remarks>
            <param name="image">Source image.</param>
            <param name="decodingParams">IPI image decoding parameters.</param>
            <returns>Result image.</returns>
        </member>
        <member name="M:Pr22.Engine.ReadField(Pr22.Imaging.DocImage,Pr22.Util.Variant)">
            <summary>
            Reads character or barcode data from an image.
            </summary>
            <remarks>This method has the same role as <see cref="M:Pr22.Imaging.DocImage.ReadField(Pr22.Util.Variant)"/>.</remarks>
            <param name="image">The input image to read from.</param>
            <param name="readingParams">Reading parameters that are described in the Passport Reader
            reference manual.</param>
            <returns>The result data structure.</returns>
        </member>
        <member name="M:Pr22.Engine.GetRootDocument">
            <summary>
            Returns the root <see cref="T:Pr22.Processing.Document"/> containing all data to save.
            </summary>
            <returns>The root Document.</returns>
        </member>
        <member name="P:Pr22.Engine.Directory">
            <summary>
            Returns the location of the OCR engines.
            </summary>
        </member>
        <member name="T:Pr22.DocScanner">
            <summary>
            Document scanner module.
            </summary>
        </member>
        <member name="M:Pr22.DocScanner.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:Pr22.DocScanner.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.DocScanner.Scan(Pr22.Task.DocScannerTask,Pr22.Imaging.PagePosition)">
            <summary>
            Takes images from an object window of the scanner.
            </summary>
            <seealso cref="M:Pr22.DocScanner.Information.GetWindowCount"/>
            <param name="task">List of lights and the object window Id.</param>
            <param name="pos">The target page.</param>
            <returns>List of the scanned images.</returns>
        </member>
        <member name="M:Pr22.DocScanner.GetPreview">
            <summary>
            Returns the last captured preview image.
            </summary>
            <remarks>To get preview images a <see cref="M:Pr22.Task.FreerunTask.LiveStream"/> task should be
            started before.</remarks>
            <returns>The requested image.</returns>
        </member>
        <member name="M:Pr22.DocScanner.GetPage(System.Int32)">
            <summary>
            Returns a previously scanned <see cref="T:Pr22.Processing.Page"/>.
            </summary>
            <param name="pageindex">Ordinal number of the requested Page.</param>
            <returns>The Page.</returns>
        </member>
        <member name="M:Pr22.DocScanner.StartScanning(Pr22.Task.DocScannerTask,Pr22.Imaging.PagePosition)">
            <summary>
            Takes images from an object window of the scanner in a background thread.
            </summary>
            <param name="task">List of lights and the object window Id.</param>
            <param name="pos">The target page selector.</param>
            <returns>A TaskControl object.</returns>
            <remarks>After the process is finished the <see cref="M:Pr22.Task.TaskControl.Wait"/>
            method must be called.</remarks>
        </member>
        <member name="M:Pr22.DocScanner.StartTask(Pr22.Task.FreerunTask)">
            <summary>
            Starts a task declared by the task parameter.
            </summary>
            <param name="task">The task to start.</param>
            <returns>A TaskControl object.</returns>
            <remarks>After the process is finished the <see cref="M:Pr22.Task.TaskControl.Wait"/>
            method must be called.</remarks>
        </member>
        <member name="M:Pr22.DocScanner.CleanUpData">
            <summary>
            Removes all the internally stored data (images, documents) from the system.
            </summary>
        </member>
        <member name="M:Pr22.DocScanner.CleanUpLastPage">
            <summary>
            Removes the internally stored data (images, documents) of the last page from the system.
            </summary>
            <remarks>
            Removing the last page is useful when a wrong page has scanned, e.g. because
            the scanned image is blurred or accidentally wrong document page has been
            scanned.
            </remarks>
        </member>
        <member name="M:Pr22.DocScanner.LoadDocument(Pr22.Processing.BinData)">
            <summary>
            Loads the data of a document saved earlier.
            </summary>
            <remarks> This method removes all the internally stored data (images, documents)
            from the system.</remarks>
            <param name="document">Data to load.</param>
            <returns>Root document represents all the loaded data.</returns>
        </member>
        <member name="P:Pr22.DocScanner.Info">
            <summary>
            Returns the scanner information.
            </summary>
        </member>
        <member name="T:Pr22.DocScanner.Information">
            <summary>
            Class for storing information on a <see cref="T:Pr22.DocScanner"/>.
            </summary>
        </member>
        <member name="M:Pr22.DocScanner.Information.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:Pr22.DocScanner.Information.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.DocScanner.Information.GetLights">
            <summary>
            Returns the list of usable <see cref="T:Pr22.Imaging.Light"/>s.
            </summary>
            <returns>The light list.</returns>
        </member>
        <member name="M:Pr22.DocScanner.Information.GetVersion(System.Char)">
            <summary>
            Returns version information of the scanner.
            </summary>
            <param name="component">Character <c>'H'</c> for version of the hardware, character <c>'F'</c> for version of
            the firmware, or character <c>'S'</c> for version of the device handling software library.</param>
            <returns>Version information of the scanner.</returns>
        </member>
        <member name="M:Pr22.DocScanner.Information.IsCalibrated">
            <summary>
            Returns if the scanner is calibrated.
            </summary>
            <returns>True if the scanner is calibrated.</returns>
        </member>
        <member name="M:Pr22.DocScanner.Information.IsCalibrated(System.Int32)">
            <summary>
            Returns if an object window of the scanner is calibrated.
            </summary>
            <seealso cref="M:Pr22.DocScanner.Information.GetWindowCount"/>
            <param name="objectWindow">Ordinal number of the object window of the scanner.</param>
            <returns>True if the object window is calibrated.</returns>
        </member>
        <member name="M:Pr22.DocScanner.Information.GetSize(System.Int32)">
            <summary>
            Returns the size of an object window of the scanner.
            </summary>
            <seealso cref="M:Pr22.DocScanner.Information.GetWindowCount"/>
            <param name="objectWindow">Ordinal number of the object window of the scanner.</param>
            <returns>A rectangle of the object window in micrometers.</returns>
        </member>
        <member name="M:Pr22.DocScanner.Information.GetWindowCount">
            <summary>
            Returns the number of object windows of the scanner.
            </summary>
            <remarks>More object windows are available only in double-page document readers
            and in devices equipped with photo camera. For scanning with photo camera, use
            <see cref="F:Pr22.Imaging.Light.Photo">Light.Photo</see> instead of handling object window.
            </remarks>
            <returns>The number of object windows of the scanner.</returns>
        </member>
        <member name="T:Pr22.Task.DocScannerTask">
            <summary>
            List of image scanning requirements.
            </summary>
        </member>
        <member name="F:Pr22.Task.DocScannerTask.ObjectWindow">
            <summary>
            The object window.
            </summary>
            <remarks>Most devices have only one object window, so this value should not
            be modified.</remarks>
        </member>
        <member name="M:Pr22.Task.DocScannerTask.#ctor">
            <summary>
            New list of image scanning requirements.
            </summary>
        </member>
        <member name="M:Pr22.Task.DocScannerTask.Add(Pr22.Imaging.Light)">
            <summary>
            Appends a <see cref="T:Pr22.Imaging.Light"/> to the list.
            </summary>
            <param name="light">The requested Light.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Pr22.Task.DocScannerTask.Del(Pr22.Imaging.Light)">
            <summary>
            Removes a <see cref="T:Pr22.Imaging.Light"/> from the list.
            </summary>
            <param name="light">The Light not to scan.</param>
            <returns>This object.</returns>
        </member>
        <member name="T:Pr22.Task.FreerunTask">
            <summary>
            DocScanner freerun mode tasks.
            </summary>
        </member>
        <member name="M:Pr22.Task.FreerunTask.LiveStream">
            <summary>
            Declares a live stream scanning task.
            </summary>
            <returns>A live stream scanning task.</returns>
        </member>
        <member name="M:Pr22.Task.FreerunTask.Detection">
            <summary>
            Declares a document presence detection task.
            </summary>
            <returns>A document presence detection task.</returns>
        </member>
        <member name="T:Pr22.Util.Frame">
            <summary>
            Data for a quadrangle.
            </summary>
            <remarks>
            A quadrangle is in normal orientation if the coordinates of its top left corner
            have the lowest values.
            </remarks>
        </member>
        <member name="F:Pr22.Util.Frame.x1">
            <summary>
            X coordinate of the top left corner.
            </summary>
        </member>
        <member name="F:Pr22.Util.Frame.y1">
            <summary>
            Y coordinate of the top left corner.
            </summary>
        </member>
        <member name="F:Pr22.Util.Frame.x2">
            <summary>
            X coordinate of the top right corner.
            </summary>
        </member>
        <member name="F:Pr22.Util.Frame.y2">
            <summary>
            Y coordinate of the top right corner.
            </summary>
        </member>
        <member name="F:Pr22.Util.Frame.x3">
            <summary>
            X coordinate of the right bottom corner.
            </summary>
        </member>
        <member name="F:Pr22.Util.Frame.y3">
            <summary>
            Y coordinate of the right bottom corner.
            </summary>
        </member>
        <member name="F:Pr22.Util.Frame.x4">
            <summary>
            X coordinate of the left bottom corner.
            </summary>
        </member>
        <member name="F:Pr22.Util.Frame.y4">
            <summary>
            Y coordinate of the left bottom corner.
            </summary>
        </member>
        <member name="T:Pr22.Imaging.RawImage">
            <summary>
            Low level image data of the system that can be saved or converted to <see cref="T:System.Drawing.Bitmap"/>.
            </summary>
        </member>
        <member name="M:Pr22.Imaging.RawImage.#ctor">
            <summary>
            New <c>RawImage</c>.
            </summary>
        </member>
        <member name="M:Pr22.Imaging.RawImage.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.Imaging.RawImage.#ctor(Pr22.Imaging.RawImage)">
            <summary>
            References an existing <c>RawImage</c>.
            </summary>
            <param name="image">Source <c>RawImage</c>.</param>
        </member>
        <member name="M:Pr22.Imaging.RawImage.IsValid">
            <summary>
            Checks if the <c>RawImage</c> is valid.
            </summary>
            <returns>In case of valid <c>RawImage</c> the return value is true.</returns>
        </member>
        <member name="M:Pr22.Imaging.RawImage.Alloc">
            <summary>
            Allocates and initializes a blank <c>RawImage</c>.
            </summary>
            <returns>The allocated and initialized <c>RawImage</c>.</returns>
        </member>
        <member name="M:Pr22.Imaging.RawImage.Create(Pr22.Imaging.RawImage.PixelFormat,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a <c>RawImage</c>.
            </summary>
            <param name="format">Pixel format.</param>
            <param name="xsize">Horizontal size of image in pixels.</param>
            <param name="ysize">Vertical size of image in pixels.</param>
            <param name="sline">Length of a row in bytes (min.:xsize*size of a pixel in bytes).
            If zero the system computes the correct value.
            </param>
            <returns>This object.</returns>
        </member>
        <member name="M:Pr22.Imaging.RawImage.Load(Pr22.Processing.BinData)">
            <summary>
            Loads an image from the memory.
            </summary>
            <param name="buffer">Image data.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Pr22.Imaging.RawImage.Save(Pr22.Imaging.RawImage.FileFormat)">
            <summary>
            Saves the image to the memory in a specific <see cref="T:Pr22.Imaging.RawImage.FileFormat">FileFormat</see>.
            </summary>
            <param name="fileformat">The file format.</param>
            <returns>Output raw memory data.</returns>
        </member>
        <member name="M:Pr22.Imaging.RawImage.Save(Pr22.Imaging.RawImage.FileFormat,Pr22.Util.Variant,System.String)">
            <summary>
            Saves the image to the memory in a specific <see cref="T:Pr22.Imaging.RawImage.FileFormat">FileFormat</see>.
            </summary>
            <param name="fileformat">The file format.</param>
            <param name="properties">Properties for saving. The properties are described in the
            reference manual.</param>
            <param name="comments">Comments for save.</param>
            <returns>Output raw memory data.</returns>
        </member>
        <member name="M:Pr22.Imaging.RawImage.ConvertPixelFormat(Pr22.Imaging.RawImage.PixelFormat,System.Int32)">
            <summary>
            Converts the <c>RawImage</c> to a specific <see cref="T:Pr22.Imaging.RawImage.PixelFormat">PixelFormat</see>.
            </summary>
            <param name="format">Pixel format of the target image.</param>
            <param name="sline">Length of a row in bytes (min.: xsize * size of a pixel in bytes).
            If zero the system computes the correct value.</param>
            <returns>The converted <c>RawImage</c> in the desired pixel format.</returns>
        </member>
        <member name="M:Pr22.Imaging.RawImage.Duplicate">
            <summary>
            Duplicates the <c>RawImage</c>.
            </summary>
            <returns>The duplicated <c>RawImage</c>.</returns>
        </member>
        <member name="M:Pr22.Imaging.RawImage.ToVariant(System.Int32,System.String)">
            <summary>
            Embeds an image into a <see cref="T:Pr22.Util.Variant"/>.
            </summary>
            <param name="varid">The Id for the created Variant.</param>
            <param name="varname">The name for the created Variant.</param>
            <returns>The created Variant.</returns>
        </member>
        <member name="M:Pr22.Imaging.RawImage.FromVariant(Pr22.Util.Variant)">
            <summary>
            Gets an embedded image from a <see cref="T:Pr22.Util.Variant"/>.
            </summary>
            <param name="source">Variant with an embedded image.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Pr22.Imaging.RawImage.ToBitmap">
            <summary>
            Returns the image as a System.Drawing.Bitmap object.
            </summary>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:Pr22.Imaging.RawImage.FromBitmap(System.Drawing.Bitmap)">
            <summary>
            Converts a System.Drawing.Bitmap object to <c>RawImage</c>.
            </summary>
            <param name="bm">The Bitmap object to be converted to <c>RawImage</c>.</param>
            <returns>This object.</returns>
        </member>
        <member name="P:Pr22.Imaging.RawImage.Format">
            <summary>
            <c>PixelFormat</c> of the <c>RawImage</c>.
            </summary>
        </member>
        <member name="P:Pr22.Imaging.RawImage.Size">
            <summary>
            Size of the image in pixels.
            </summary>
        </member>
        <member name="P:Pr22.Imaging.RawImage.SLine">
            <summary>
            Length of a row in bytes.
            </summary>
        </member>
        <member name="P:Pr22.Imaging.RawImage.RawData">
            <summary>
            Address of the buffer of the RAW pixel data. (in unmanaged memory)
            </summary>
        </member>
        <member name="P:Pr22.Imaging.RawImage.RawSize">
            <summary>
            Size of the RAW pixel data.
            </summary>
        </member>
        <member name="P:Pr22.Imaging.RawImage.HRes">
            <summary>
            Horizontal resolution of the <c>RawImage</c> in pixel/meters.
            </summary>
        </member>
        <member name="P:Pr22.Imaging.RawImage.VRes">
            <summary>
            Vertical resolution of the <c>RawImage</c> in pixel/meters.
            </summary>
        </member>
        <member name="T:Pr22.Imaging.RawImage.PixelFormat">
            <summary>
            Available pixel formats.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.Undef">
            <summary>Undefined format for Load functions.</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.Gray">
            <summary>8 bit: 8 bit (grayscale)</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.RGB555">
            <summary>16 bit: 1-5-5-5 bit (0,R,G,B)</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.BGR555">
            <summary>16 bit: 1-5-5-5 bit (0,B,G,R)</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.RGB565">
            <summary>16 bit: 5-6-5 bit (R,G,B)</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.BGR565">
            <summary>16 bit: 5-6-5 bit (B,G,R)</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.RGB">
            <summary>24 bit: 8-8-8 bit (R,G,B)</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.BGR">
            <summary>24 bit: 8-8-8 bit (B,G,R)</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.RGBA">
            <summary>32 bit: 8-8-8-8 bit (R,G,B,A)</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.BGRA">
            <summary>32 bit: 8-8-8-8 bit (B,G,R,A)</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.YUV422">
            <summary>32 bit/2 pixel: 8-8-8-8 bit (U,Y1,V,Y2)</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.GRAY12">
            <summary>16 bit: 4-12 bit (0,grayscale)</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.RGB12">
            <summary>48 bit: 4-12-4-12-4-12 bit (0,R,0,G,0,B)</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.BGR12">
            <summary>48 bit: 4-12-4-12-4-12 bit (0,B,0,G,0,R)</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.GBRG">
            <summary>32 bit/4 pixel: 8-8-8-8 bit Bayern-pattern (G,B,R,G)</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.BGGR">
            <summary>32 bit/4 pixel: 8-8-8-8 bit Bayern-pattern (B,G,G,R)</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.RGGB">
            <summary>32 bit/4 pixel: 8-8-8-8 bit Bayern-pattern (R,G,G,B)</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.PixelFormat.GRBG">
            <summary>32 bit/4 pixel: 8-8-8-8 bit Bayern-pattern (G,R,B,G)</summary>
        </member>
        <member name="T:Pr22.Imaging.RawImage.FileFormat">
            <summary>
            Image file formats.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.FileFormat.Bmp">
            <summary>BMP format.</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.FileFormat.Jpeg">
            <summary>JPEG format (ISO/IEC 10918-1).</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.FileFormat.Jpeg2k_Stream">
            <summary>JPEG-2000 Code stream syntax (ISO/IEC 15444-1).</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.FileFormat.Jpeg2k">
            <summary>JPEG-2000 JP2 format syntax (ISO/IEC 15444-1).</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.FileFormat.Raw">
            <summary>RAW format (uncompressed pixel data without header).</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.FileFormat.Png">
            <summary>PNG format (Portable Network Graphics).</summary>
        </member>
        <member name="F:Pr22.Imaging.RawImage.FileFormat.Wsq">
            <summary>WSQ format (Wavelet Scalar Quantization).</summary>
        </member>
        <member name="T:Pr22.Control.NamespaceDoc">
            <summary>
            Control classes of miscellaneous hardware modules.
            </summary>
        </member>
        <member name="T:Pr22.Control.PowerControl">
            <summary>
            Power controller module.
            </summary>
        </member>
        <member name="M:Pr22.Control.PowerControl.Suspend">
            <summary>
            Suspends the device.
            </summary>
        </member>
        <member name="M:Pr22.Control.PowerControl.WakeUp">
            <summary>
            Wakes up the device.
            </summary>
        </member>
        <member name="T:Pr22.Processing.NamespaceDoc">
            <summary>
            Enumerations and classes of data processing.
            </summary>
        </member>
        <member name="T:Pr22.Processing.BinData">
            <summary>
            Class for storing binary or textual data.
            </summary>
        </member>
        <member name="M:Pr22.Processing.BinData.#ctor(System.Byte[])">
            <summary>
            New storage for binary data.
            </summary>
            <param name="data">Binary data.</param>
        </member>
        <member name="M:Pr22.Processing.BinData.#ctor">
            <summary>
            New storage for binary or textual data.
            </summary>
        </member>
        <member name="M:Pr22.Processing.BinData.Load(System.String)">
            <summary>
            Loads data from a file.
            </summary>
            <param name="fileName">File name to load from.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Pr22.Processing.BinData.Save(System.String)">
            <summary>
            Saves data to a file.
            </summary>
            <param name="fileName">File name to save to.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Pr22.Processing.BinData.SetString(System.String)">
            <summary>
            Generates binary data from a string.
            </summary>
            <param name="str">The string to store.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Pr22.Processing.BinData.SetString(System.Collections.Generic.List{System.String})">
            <summary>
            Generates binary data from a string list.
            </summary>
            <param name="strlist">The string list to store.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Pr22.Processing.BinData.SetByteArray(System.Byte[])">
            <summary>
            Sets binary data.
            </summary>
            <param name="arr">Binary data.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Pr22.Processing.BinData.ToByteArray">
            <summary>
            Stores data into a byte array.
            </summary>
            <returns>The output byte array.</returns>
        </member>
        <member name="M:Pr22.Processing.BinData.ToString">
            <summary>
            Stores data into a string.
            </summary>
            <returns>String representation of the data.</returns>
        </member>
        <member name="T:Pr22.Processing.FieldSource">
            <summary>
            <c>Field</c> source IDs.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldSource.All">
            <summary>
            Any source.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldSource.Mrz">
            <summary>
            Machine Readable Zone.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldSource.Viz">
            <summary>
            Visual Inspection Zone.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldSource.Barcode">
            <summary>
            Barcode.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldSource.MagStripe">
            <summary>
            Magnetic stripe.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldSource.ECard">
            <summary>
            SmartCard (contact or contactless).
            </summary>
        </member>
        <member name="T:Pr22.Processing.FieldId">
            <summary>
            <c>Field</c> IDs.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.All">
            <summary>
            All fields.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Composite1">
            <summary>
            Not specified / composite data #1.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Composite2">
            <summary>
            Not specified / composite data #2.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Composite3">
            <summary>
            Not specified / composite data #3.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Composite4">
            <summary>
            Not specified / composite data #4.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Composite5">
            <summary>
            Not specified / composite data #5.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Name">
            <summary>
            Full name.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Givenname">
            <summary>
            Given name.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Surname">
            <summary>
            Family name.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Surname2">
            <summary>
            Family name 2nd.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.MiddleName">
            <summary>
            Middle name.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.MaidenName">
            <summary>
            Full name at the time of birth.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.MaidenGivenname">
            <summary>
            Given name at the time of birth.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.MaidenSurname">
            <summary>
            Family name at the time of birth.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.BirthDate">
            <summary>
            Date of birth.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.BirthPlace">
            <summary>
            Place of birth.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.BirthCountry">
            <summary>
            Country of birth.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.MotherName">
            <summary>
            Mother's full name.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.MotherGivenname">
            <summary>
            Mother's given name.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.MotherSurname">
            <summary>
            Mother's family name.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Nationality">
            <summary>
            Nationality.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Sex">
            <summary>
            Gender.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.BirthProvince">
            <summary>
            Province of birth.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.ParentsName">
            <summary>
            Given name of the parents.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.FatherName">
            <summary>
            Father's full name.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.MaritalStatus">
            <summary>
            Marital status.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.FatherGivenname">
            <summary>
            Father's given name.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.FatherSurname">
            <summary>
            Father's family name.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DocumentNumber">
            <summary>
            Document number.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Type">
            <summary>
            Type of document as stated by the document.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.IssueCountry">
            <summary>
            Issuing country.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.IssuePlace">
            <summary>
            Place of issue.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.IssueState">
            <summary>
            State of issue.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.IssueDate">
            <summary>
            Date of issue.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.ExpiryDate">
            <summary>
            Date of expiry.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.IssueOrg">
            <summary>
            Issuing organization.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.ProvisionalEndDate">
            <summary>
            End of provisional period.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.PersonalNumber">
            <summary>
            Personal identification number.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.HealthInsNumber">
            <summary>
            Health insurance identification number.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DocType">
            <summary>
            Type of document as recognized by the engine.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.PersonalData1">
            <summary>
            Additional personal data #1.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.PersonalData2">
            <summary>
            Additional personal data #2.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Address">
            <summary>
            Full address.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AddressZip">
            <summary>
            Address zip code.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AddressCity">
            <summary>
            Address city.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AddressStreet">
            <summary>
            Address street.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AddressHouse">
            <summary>
            Address building number.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AddressFlat">
            <summary>
            Address flat number.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AddressDate">
            <summary>
            Registration date of the address.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AddressProvince">
            <summary>
            Address province.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.TempAddress">
            <summary>
            Full temporary address.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.TempAddressZip">
            <summary>
            Temporary address zip code.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.TempAddressCity">
            <summary>
            Temporary address city.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.TempAddressStreet">
            <summary>
            Temporary address street.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.TempAddressHouse">
            <summary>
            Temporary address building number.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.TempAddressFlat">
            <summary>
            Temporary address flat number.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.TempAddressDate">
            <summary>
            Registration date of temporary address.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.TempAddressDateEnd">
            <summary>
            Expiry date of temporary address.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.TempAddressProvince">
            <summary>
            Temporary address province.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.ValidArea">
            <summary>
            Validity area.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.StartOfValidity">
            <summary>
            Start of validity.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.NumberOfEntries">
            <summary>
            Number of entries.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DurationOfStay">
            <summary>
            Duration of stay.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.BankAccount">
            <summary>
            Bank account number.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.FromAddress">
            <summary>
            Source address.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DestAddress">
            <summary>
            Destination address.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.FlightNo">
            <summary>
            Flight number.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Compartment">
            <summary>
            Compartment.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.SeatNo">
            <summary>
            Seat number.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Face">
            <summary>
            Face.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Signature">
            <summary>
            Signature.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Fingerprint">
            <summary>
            Fingerprint.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Iris">
            <summary>
            Iris.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Height">
            <summary>
            Height.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Weight">
            <summary>
            Weight.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.EyeColor">
            <summary>
            Eye color.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.HairColor">
            <summary>
            Hair color.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Authenticity">
            <summary>
            General authenticity.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Authenticity1">
            <summary>
            Authenticity #1.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Authenticity2">
            <summary>
            Authenticity #2.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Authenticity3">
            <summary>
            Authenticity #3.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Authenticity4">
            <summary>
            Authenticity #4.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Authenticity5">
            <summary>
            Authenticity #5.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Telephone">
            <summary>
            Telephone number.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Profession">
            <summary>
            Profession.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Title">
            <summary>
            Title.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.PersonalSummary">
            <summary>
            Personal summary.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.ProofOfCitizenship">
            <summary>
            Proof of citizenship.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.OtherTdNumbers">
            <summary>
            Other travel document numbers.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.CustodyInformation">
            <summary>
            Custody information.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.OtherName">
            <summary>
            Other name.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.OtherPeople">
            <summary>
            Other people.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Observations">
            <summary>
            Observations.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Tax">
            <summary>
            Tax/exit requirements.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.FrontImage">
            <summary>
            Image of front page of the document.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.RearImage">
            <summary>
            Image of back page of the document.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.PersonalizationDate">
            <summary>
            Date of personalization.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.PersonalizationSystem">
            <summary>
            Serial number of personalization device.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.OrganDonor">
            <summary>
            Organ donor.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.Remarks">
            <summary>
            Remarks.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.CAR">
            <summary>
            Certification Authority Reference.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.CHR">
            <summary>
            Certificate Holder Reference.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.LowLevel">
            <summary>
            Signals that optical recognition level information are needed.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.FormatCheck">
            <summary>
            Signals that quality assurance information are needed.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DocumentDescriptor">
            <summary>
            <c>ECard</c> table of contents data.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.B900">
            <summary>
            B900 ink check.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.CompositeVizAuth">
            <summary>
            Composite VIZ authentication.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DullCheck">
            <summary>
            Dull paper check.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.SecurityFibres">
            <summary>
            Security fibres.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.COM">
            <summary>
            <c>ECard</c> COM file.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DG1">
            <summary>
            <c>ECard</c> DataGroup 1.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DG2">
            <summary>
            <c>ECard</c> DataGroup 2.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DG3">
            <summary>
            <c>ECard</c> DataGroup 3.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DG4">
            <summary>
            <c>ECard</c> DataGroup 4.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DG5">
            <summary>
            <c>ECard</c> DataGroup 5.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DG6">
            <summary>
            <c>ECard</c> DataGroup 6.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DG7">
            <summary>
            <c>ECard</c> DataGroup 7.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DG8">
            <summary>
            <c>ECard</c> DataGroup 8.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DG9">
            <summary>
            <c>ECard</c> DataGroup 9.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DG10">
            <summary>
            <c>ECard</c> DataGroup 10.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DG11">
            <summary>
            <c>ECard</c> DataGroup 11.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DG12">
            <summary>
            <c>ECard</c> DataGroup 12.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DG13">
            <summary>
            <c>ECard</c> DataGroup 13.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DG14">
            <summary>
            <c>ECard</c> DataGroup 14.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DG15">
            <summary>
            <c>ECard</c> DataGroup 15.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.DG16">
            <summary>
            <c>ECard</c> DataGroup 16.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.CardAccess">
            <summary>
            <c>ECard</c> Card Access file.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.CardSecurity">
            <summary>
            <c>ECard</c> Card Security file.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.CVCA">
            <summary>
            <c>ECard</c> CVCA file.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.SOD">
            <summary>
            <c>ECard</c> SOD file.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.CertDS">
            <summary>
            Document Signer certificate file.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.CertCSCA">
            <summary>
            Country Signing CA certificate file.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AuthPassive">
            <summary>
            <c>ECard</c> passive authentication.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AuthTerminal">
            <summary>
            <c>ECard</c> terminal authentication.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AuthPACE">
            <summary>
            <c>ECard</c> password authenticated connection establishment.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AuthBAC">
            <summary>
            <c>ECard</c> basic access control authentication.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AuthChip">
            <summary>
            <c>ECard</c> chip authentication.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AuthActive">
            <summary>
            <c>ECard</c> active authentication.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AuthSelectApp">
            <summary>
            <c>ECard</c> select application.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AuthBAP">
            <summary>
            <c>ECard</c> basic access protection.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AuthBlock">
            <summary>
            <c>ECard</c> block authentication.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AuthInitTerminal">
            <summary>
            <c>ECard</c> initialize terminal authentication.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AuthCompleteTerminal">
            <summary>
            <c>ECard</c> complete terminal authentication.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldId.AuthStorageCard">
            <summary>
            <c>ECard</c> storage card authentication.
            </summary>
        </member>
        <member name="T:Pr22.Control.StatusLed">
            <summary>
            Controller class for the status leds and buzzers.
            </summary>
        </member>
        <member name="M:Pr22.Control.StatusLed.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:Pr22.Control.StatusLed.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.Control.StatusLed.Turn">
            <summary>
            Sets the led state.
            </summary>
        </member>
        <member name="M:Pr22.Control.StatusLed.Turn(Pr22.Control.StatusLed.Color)">
            <summary>
            Sets the led state.
            </summary>
            <param name="color"><see cref="T:Pr22.Control.StatusLed.Color">Color</see> to switch to.</param>
        </member>
        <member name="M:Pr22.Control.StatusLed.Blink(System.Int32[],System.Int32)">
            <summary>
            Starts a led blinking or buzzer beeping background task.
            </summary>
            <param name="sample">Durations of ON and OFF states in milliseconds.</param>
            <param name="iteration">Number of repetitions (0 stands for infinite).</param>
        </member>
        <member name="M:Pr22.Control.StatusLed.Blink(Pr22.Control.StatusLed.Color,System.Int32[],System.Int32)">
            <summary>
            Starts a led blinking or buzzer beeping background task.
            </summary>
            <param name="color">The <see cref="T:Pr22.Control.StatusLed.Color">color</see> to blink.</param>
            <param name="sample">Durations of ON and OFF states in milliseconds.</param>
            <param name="iteration">Number of repetitions (0 stands for infinite).</param>
        </member>
        <member name="P:Pr22.Control.StatusLed.Light">
            <summary>
            Returns the led type.
            </summary>
        </member>
        <member name="T:Pr22.Control.StatusLed.Color">
            <summary>
            Usable status led colors. Both led types and led states are enumerated.
            </summary>
            <remarks>
            Led type provides information and cannot be set. Led state is for setting.
            </remarks>
        </member>
        <member name="F:Pr22.Control.StatusLed.Color.Off">
            <summary>
            Led state: turn off.
            </summary>
        </member>
        <member name="F:Pr22.Control.StatusLed.Color.OG">
            <summary>
            The led type is bi-color: green/orange. Set to this value is not permitted.
            </summary>
        </member>
        <member name="F:Pr22.Control.StatusLed.Color.ORG">
            <summary>
            The led type is tri-color: red/green/orange. Set to this value is not permitted.
            </summary>
        </member>
        <member name="F:Pr22.Control.StatusLed.Color.System">
            <summary>
            Led type. The led is controlled by the system only. Set to this value is not permitted.
            </summary>
        </member>
        <member name="F:Pr22.Control.StatusLed.Color.Green">
            <summary>
            State/type. The color of the led is green.
            </summary>
        </member>
        <member name="F:Pr22.Control.StatusLed.Color.Red">
            <summary>
            State/type. The color of the led is red.
            </summary>
        </member>
        <member name="F:Pr22.Control.StatusLed.Color.Orange">
            <summary>
            State/type. The color of the led is orange.
            </summary>
        </member>
        <member name="F:Pr22.Control.StatusLed.Color.Blue">
            <summary>
            State/type. The color of the led is blue.
            </summary>
        </member>
        <member name="F:Pr22.Control.StatusLed.Color.Auto">
            <summary>
            Led state: turn on automatic led control.
            </summary>
        </member>
        <member name="F:Pr22.Control.StatusLed.Color.On">
            <summary>
            Led state: turn on any of the available lights.
            </summary>
        </member>
        <member name="F:Pr22.Control.StatusLed.Color.Buzzer">
            <summary>
            State/type. Buzzer.
            </summary>
        </member>
        <member name="T:Pr22.Util.VariantPos">
            <summary>
            Container of <see cref="T:Pr22.Util.Variant"/> list item and child indexing parameters.
            </summary>
        </member>
        <member name="M:Pr22.Util.VariantPos.ByIndex(System.Int32)">
            <summary>Select the item with ordinal number of ix.</summary>
            <param name="ix">The index.</param>
            <returns>New VariantPos object.</returns>
        </member>
        <member name="M:Pr22.Util.VariantPos.ById(System.Int32)">
            <summary>Search by Id.</summary>
            <param name="id">The Id.</param>
            <returns>New VariantPos object.</returns>
        </member>
        <member name="M:Pr22.Util.VariantPos.ById(System.Int32,System.Int32)">
            <summary>Search for the item with ordinal number of ix among items
            having the same IDs.</summary>
            <param name="id">The Id.</param>
            <param name="ix">The index.</param>
            <returns>New VariantPos object.</returns>
        </member>
        <member name="M:Pr22.Util.VariantPos.ByName(System.String)">
            <summary>Search by name.</summary>
            <param name="name">The name.</param>
            <returns>New VariantPos object.</returns>
        </member>
        <member name="M:Pr22.Util.VariantPos.ByName(System.String,System.Int32)">
            <summary>Search for the the item with ordinal number of ix among items
            having the same names.</summary>
            <param name="name">The name.</param>
            <param name="ix">The index.</param>
            <returns>New VariantPos object.</returns>
        </member>
        <member name="P:Pr22.Util.VariantPos.Last">
            <summary>Select the last item.</summary>
        </member>
        <member name="P:Pr22.Util.VariantPos.Append">
            <summary>Inserting after the index position.</summary>
        </member>
        <member name="T:Pr22.Util.Variant">
            <summary>
            Class for variant data management.
            The Variant class stores references to the variant data objects.
            </summary>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor">
            <summary>
            Defines an empty variant class.
            </summary>
            <remarks>
            Empty variants cannot be modified without using a Create method or an
            assignment operator.
            </remarks>
        </member>
        <member name="M:Pr22.Util.Variant.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.Util.Variant.IsValid">
            <summary>
            Returns if the variant is valid or empty.
            </summary>
            <returns>True if the variant is valid or false if it is empty.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.Leave">
            <summary>
            Finishes working with the actual variant object.
            The class became an empty variant class.
            </summary>
            <remarks>Empty variants cannot be modified without using a Create method or an
            assignment operator.</remarks>
            <returns> The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.Dispose">
            <summary>
            Finishes working with the actual object.
            </summary>
        </member>
        <member name="M:Pr22.Util.Variant.Duplicate">
            <summary>
            Duplicates, copies the variant and all of its descendants.
            </summary>
            <remarks>The Variant class stores references to variant data objects.
            Modifying the data structure of a variant affects all the variables that references the
            same memory area. In order to avoid this behaviour the variant can be duplicated
            before modification.</remarks>
            <returns>
            The variant object references the copy of this variant.
            </returns>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(Pr22.Util.Variant)">
            <summary>
            References an existing variant.
            </summary>
            <param name="source">Source variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.Ref">
            <summary>
            References an existing variant to enable multiple Disposing.
            </summary>
            <returns>The variant object references this variant.
            </returns>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.Int32,Pr22.Util.Variant.NullT)">
            <summary>
            Constructor, defines a NULL type variant class.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="nulltype">Value used for constructing a NULL type variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.String,Pr22.Util.Variant.NullT)">
            <summary>
            Constructor, defines a NULL type variant class.
            </summary>
            <param name="name">The name of the variant.</param>
            <param name="nulltype">Value used for constructing a NULL type variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.Create(System.Int32,System.String)">
            <summary>
            Creates a NULL type variant structure.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="name">The name of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.Clear">
            <summary>
             Modifies an existing variant to NULL type.
            </summary>
            <returns>
            The variant object.
            </returns>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor, defines an integer type variant class.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.String,System.Int32)">
            <summary>
            Constructor, defines an integer type variant class.
            </summary>
            <param name="name">The name of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.Create(System.Int32,System.String,System.Int32)">
            <summary>
            Creates an integer type variant structure.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="name">The name of the variant.</param>
            <param name="data">The value of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.op_Implicit(Pr22.Util.Variant)~System.Int32">
            <summary>
            Conversion operator to integer.
            </summary>
            <param name="var">Variant to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.ToInt">
            <summary>
            Returns the value of the variant converted to integer.
            </summary>
            <returns>
            The value of the variant converted to integer.
            </returns>
        </member>
        <member name="M:Pr22.Util.Variant.Update(System.Int32)">
            <summary>
            Modifies the type and the value of an existing variant.
            </summary>
            <param name="data">The value of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.Int32,System.Int64)">
            <summary>
            Constructor, defines an long type variant class.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.String,System.Int64)">
            <summary>
            Constructor, defines an long type variant class.
            </summary>
            <param name="name">The name of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.Create(System.Int32,System.String,System.Int64)">
            <summary>
            Creates an long type variant structure.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="name">The name of the variant.</param>
            <param name="data">The value of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.op_Implicit(Pr22.Util.Variant)~System.Int64">
            <summary>
            Conversion operator to long.
            </summary>
            <param name="var">Variant to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.ToLong">
            <summary>
            Returns the value of the variant converted to long.
            </summary>
            <returns>
            The value of the variant converted to long.
            </returns>
        </member>
        <member name="M:Pr22.Util.Variant.Update(System.Int64)">
            <summary>
            Modifies the type and the value of an existing variant.
            </summary>
            <param name="data">The value of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.Int32,System.UInt32)">
            <summary>
            Constructor, defines an unsigned integer type variant class.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.String,System.UInt32)">
            <summary>
            Constructor, defines an unsigned integer type variant class.
            </summary>
            <param name="name">The name of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.Create(System.Int32,System.String,System.UInt32)">
            <summary>
            Creates an unsigned integer type variant structure.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="name">The name of the variant.</param>
            <param name="data">The value of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.op_Implicit(Pr22.Util.Variant)~System.UInt32">
            <summary>
            Conversion operator to unsigned integer.
            </summary>
            <param name="var">Variant to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.ToUInt">
            <summary>
            Returns the value of the variant converted to unsigned integer.
            </summary>
            <returns>
            The value of the variant converted to unsigned integer.
            </returns>
        </member>
        <member name="M:Pr22.Util.Variant.Update(System.UInt32)">
            <summary>
            Modifies the type and the value of an existing variant.
            </summary>
            <param name="data">The value of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.Int32,System.UInt64)">
            <summary>
            Constructor, defines an unsigned long type variant class.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.String,System.UInt64)">
            <summary>
            Constructor, defines an unsigned long type variant class.
            </summary>
            <param name="name">The name of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.Create(System.Int32,System.String,System.UInt64)">
            <summary>
            Creates an unsigned long type variant structure.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="name">The name of the variant.</param>
            <param name="data">The value of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.op_Implicit(Pr22.Util.Variant)~System.UInt64">
            <summary>
            Conversion operator to unsigned long.
            </summary>
            <param name="var">Variant to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.ToULong">
            <summary>
            Returns the value of the variant converted to unsigned long.
            </summary>
            <returns>
            The value of the variant converted to unsigned long.
            </returns>
        </member>
        <member name="M:Pr22.Util.Variant.Update(System.UInt64)">
            <summary>
            Modifies the type and the value of an existing variant.
            </summary>
            <param name="data">The value of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.Int32,System.Single)">
            <summary>
            Constructor, defines a floating point type variant class.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.String,System.Single)">
            <summary>
            Constructor, defines a floating point type variant class.
            </summary>
            <param name="name">The name of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.Create(System.Int32,System.String,System.Single)">
            <summary>
            Creates a floating point type variant structure.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="name">The name of the variant.</param>
            <param name="data">The value of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.op_Implicit(Pr22.Util.Variant)~System.Single">
            <summary>
            Conversion operator to float.
            </summary>
            <param name="var">Variant to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.ToFloat">
            <summary>
            Returns the value of the variant converted to floating point.
            </summary>
            <returns>
            The value of the variant converted to floating point.
            </returns>
        </member>
        <member name="M:Pr22.Util.Variant.Update(System.Single)">
            <summary>
            Modifies the type and the value of an existing variant.
            </summary>
            <param name="data">The value of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.Int32,System.Double)">
            <summary>
            Constructor, defines a floating point type variant class.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.String,System.Double)">
            <summary>
            Constructor, defines a floating point type variant class.
            </summary>
            <param name="name">The name of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.Create(System.Int32,System.String,System.Double)">
            <summary>
            Creates a floating point type variant structure.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="name">The name of the variant.</param>
            <param name="data">The value of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.op_Implicit(Pr22.Util.Variant)~System.Double">
            <summary>
            Conversion operator to floating point.
            </summary>
            <param name="var">Variant to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.ToDouble">
            <summary>
            Returns the value of the variant converted to floating point.
            </summary>
            <returns>
            The value of the variant converted to floating point.
            </returns>
        </member>
        <member name="M:Pr22.Util.Variant.Update(System.Double)">
            <summary>
            Modifies the type and the value of an existing variant.
            </summary>
            <param name="data">The value of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.Int32,System.String)">
            <summary>
            Constructor, defines a string type variant class.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.String,System.String)">
            <summary>
            Constructor, defines a string type variant class.
            </summary>
            <param name="name">The name of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.Create(System.Int32,System.String,System.String)">
            <summary>
            Creates a string type variant structure.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="name">The name of the variant.</param>
            <param name="data">The value of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.op_Implicit(Pr22.Util.Variant)~System.String">
            <summary>
            Conversion operator to string.
            </summary>
            <param name="var">Variant to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.ToStringEx">
            <summary>
             Returns the value of the variant converted to string or throws an exception.
            </summary>
            <returns>
            The value of the variant converted to string.
            </returns>
        </member>
        <member name="M:Pr22.Util.Variant.ToString">
            <summary>
             Returns the value of the variant converted to string.
            </summary>
            <returns>
            The value of the variant converted to string.
            </returns>
        </member>
        <member name="M:Pr22.Util.Variant.Update(System.String)">
            <summary>
            Modifies the type and the value of an existing variant.
            </summary>
            <param name="data">The value of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.Int32,System.Int32[])">
            <summary>
            Constructor, defines an integer array type variant class.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.String,System.Int32[])">
            <summary>
            Constructor, defines an integer array type variant class.
            </summary>
            <param name="name">The name of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.op_Implicit(Pr22.Util.Variant)~System.Int32[]">
            <summary>
            Conversion operator to integer array.
            </summary>
            <param name="var">Variant to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.CreateArray(System.Int32,System.String,System.Int32[])">
            <summary>
            Creates an integer type variant array structure.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="name">The name of the variant.</param>
            <param name="varray">The array.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.UpdateArray(System.Int32[])">
            <summary>
            Modifies the type and the value of an existing variant.
            </summary>
            <param name="varray">The array.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.ToIntArray">
            <summary>
            Returns the value of the variant converted to integer array.
            </summary>
            <returns>
            The value of the variant converted to integer array.
            </returns>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.Int32,System.Byte[])">
            <summary>
            Constructor, defines a byte array type variant class.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.String,System.Byte[])">
            <summary>
            Constructor, defines a byte array type variant class.
            </summary>
            <param name="name">The name of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.op_Implicit(Pr22.Util.Variant)~System.Byte[]">
            <summary>
            Conversion operator to byte array.
            </summary>
            <param name="var">Variant to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.CreateArray(System.Int32,System.String,System.Byte[])">
            <summary>
            Creates a byte type variant array structure.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="name">The name of the variant.</param>
            <param name="varray">The array.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.UpdateArray(System.Byte[])">
            <summary>
            Modifies the type and the value of an existing variant.
            </summary>
            <param name="varray">The array.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.ToByteArray">
            <summary>
            Returns the value of the variant converted to byte array.
            </summary>
            <returns>
            The value of the variant converted to byte array.
            </returns>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.Int32,Pr22.Util.Frame)">
            <summary>
            Constructor, defines a frame type variant class.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.String,Pr22.Util.Frame)">
            <summary>
            Constructor, defines a frame type variant class.
            </summary>
            <param name="name">The name of the variant.</param>
            <param name="val">The value of the variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.op_Implicit(Pr22.Util.Variant)~Pr22.Util.Frame">
            <summary>
            Conversion operator to frame.
            </summary>
            <param name="var">Variant to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.Create(System.Int32,System.String,Pr22.Util.Frame)">
            <summary>
            Creates a frame type variant structure.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="name">The name of the variant.</param>
            <param name="frame">The value of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.Update(Pr22.Util.Frame)">
            <summary>
            Modifies the type and the value of an existing variant.
            </summary>
            <param name="frame">The value of the variant.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.ToFrame">
            <summary>
            Returns the value of the variant converted to frame.
            </summary>
            <returns>
            The value of the variant converted to frame.
            </returns>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.Int32,Pr22.Util.Variant.ListT)">
            <summary>
            Constructor, defines a list type variant class.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="listtype">Value used for constructing a list type variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.#ctor(System.String,Pr22.Util.Variant.ListT)">
            <summary>
            Constructor, defines a list type variant class.
            </summary>
            <param name="name">The name of the variant.</param>
            <param name="listtype">Value used for constructing a list type variant.</param>
        </member>
        <member name="M:Pr22.Util.Variant.op_Addition(Pr22.Util.Variant.ListPropT,Pr22.Util.Variant)">
            <summary>
            You can add a new item to a list type variant by using this operator together with the List property.
            </summary>
            <example><code>list_variant.List += new Variant(0, 5);</code></example>
            <param name="List">The list to append to.</param>
            <param name="Item">The variant to be added to the list.</param>
            <returns>New version of the list object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.CreateList(System.Int32,System.String)">
            <summary>
            Creates a list type variant structure.
            </summary>
            <param name="id">The Id of the variant.</param>
            <param name="name">The name of the variant.</param>
            <returns>The variant list object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.ChangeToList">
            <summary>
            Modifies an existing variant to list type.
            </summary>
            <returns>
            The variant object.
            </returns>
        </member>
        <member name="M:Pr22.Util.Variant.AddListItem(Pr22.Util.Variant)">
            <summary>
            Adds an item to the list type variant.
            </summary>
            <remarks>The variant lists contains references to variants, so if the appended item
            is changed the modification affects the item in the list too. To avoid this
            behaviour the item can be duplicated before appending with the Duplicate() method.
            </remarks>
            <param name="item">The item to add to the list.</param>
            <returns>The variant list object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.AddListItem(Pr22.Util.Variant,Pr22.Util.VariantPos)">
            <summary>
            Adds an item to the list type variant.
            </summary>
            <remarks>The variant lists contains references to variants, so if the appended item
            is changed the modification affects the item in the list too. To avoid this
            behaviour the item can be duplicated before appending with the Duplicate() method.
            </remarks>
            <param name="item">The item to add to the list.</param>
            <param name="position">The position to insert or append the new item.</param>
            <returns>The variant list object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.GetListItem(System.Int32)">
            <summary>
            Returns an item of the list type variant.
            </summary>
            <param name="ix">The index of the requested item.</param>
            <returns>The requested item.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.GetListItem(Pr22.Util.VariantPos)">
            <summary>
            Returns an item of the list type variant.
            </summary>
            <param name="position">The position of the requested item.</param>
            <returns>The requested item.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.member(System.Int32)">
            <summary>
            Returns a child of a variant.
            </summary>
            <remarks>
            If the requested child is missing this method creates it automatically.
            </remarks>
            <param name="id">The Id of the requested child.</param>
            <returns>The requested child.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.member(System.Int32,System.Int32)">
            <summary>
            Returns a child of a variant.
            </summary>
            <remarks>
            If the requested child is missing and the ix parameter is 0 this method creates
            the child automatically.
            </remarks>
            <param name="id">The Id of the requested child.</param>
            <param name="ix">The index of the requested child.</param>
            <returns>The requested child.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.member(System.String)">
            <summary>
            Returns a child of a variant.
            </summary>
            <remarks>
            If the requested child is missing this method creates it automatically.
            </remarks>
            <param name="name">The name of the requested child.</param>
            <returns>The requested child.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.member(System.String,System.Int32)">
            <summary>
            Returns a child of a variant.
            </summary>
            <remarks>
            If the requested child is missing and the ix parameter is 0 this method creates
            the child automatically.
            </remarks>
            <param name="name">The name of the requested child.</param>
            <param name="ix">The index of the requested child.</param>
            <returns>The requested child.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.AddChild(Pr22.Util.Variant)">
            <summary>
            Adds a child element to the variant.
            </summary>
            <param name="item">The new child to add to the children list.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.AddChild(Pr22.Util.Variant,Pr22.Util.VariantPos)">
            <summary>
            Adds a child element to the variant.
            </summary>
            <param name="item">The new child to add to the children list.</param>
            <param name="position">The position to insert or append the new child.</param>
            <returns>The variant object.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.GetChild(System.Int32)">
            <summary>
            Returns a child of a variant.
            </summary>
            <param name="ix">The index of the requested child.</param>
            <returns>The requested child.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.GetChild(System.Int32,System.Int32)">
            <summary>
            Returns a child of a variant.
            </summary>
            <param name="id">The Id of the requested child.</param>
            <param name="ix">The index of the requested child.</param>
            <returns>The requested child.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.GetChild(System.String,System.Int32)">
            <summary>
            Returns a child of a variant.
            </summary>
            <param name="name">The name of the requested child.</param>
            <param name="ix">The index of the requested child.</param>
            <returns>The requested child.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.GetChild(Pr22.Util.VariantPos)">
            <summary>
            Returns a child of a variant.
            </summary>
            <param name="position">The position of the requested child.</param>
            <returns>The requested child.</returns>
        </member>
        <member name="M:Pr22.Util.Variant.GetItemByPath(System.String)">
             <summary>
             Returns a variant from a tree.
             </summary>
             <remarks>
             <para>
             The variant data type can constitute a tree structure: every item in the tree is a variant.
             These variants can have child items that are also variants. The trees can be traversed
             level by level with the help of <see cref="M:Pr22.Util.Variant.GetChild(Pr22.Util.VariantPos)"/> and
             <see cref="M:Pr22.Util.Variant.GetListItem(Pr22.Util.VariantPos)"/> methods.
             </para>
             <para>
             If there is a need to reach a
             descendant variant located on a lower level, this method should be used instead. The item
             in the tree can be obtained by the path string that defines the exact location of the
             requested variant and has the following format:
             </para>
            
             <para><c>condition[=value] [,condition[=value]] [/condition[=value] [,condition[=value]]]</c></para>
            
             The path contains separators:
             <list type="bullet">
             <item><description>the <c>'/'</c> separates the levels of the tree,</description></item>
             <item><description>the <c>','</c> separates the search conditions of a node,</description></item>
             <item><description>the <c>'='</c> signs that a value follows,</description></item>
             </list>
            
             and identifiers:
             <list type="bullet">
             <item><description> the <c>'C'</c> selects a child item,</description></item>
             <item><description> the <c>'L'</c> selects a list item,</description></item>
             <item><description> the <c>'X'</c> signs that the value defines the index of the item,</description></item>
             <item><description> the <c>'D'</c> signs that the value defines the ID of the item,</description></item>
             <item><description> the <c>'N'</c> signs that the value defines the name of the item,</description></item>
             <item><description> the <c>'V'</c> signs that the value defines the value of the item.</description></item>
             </list>
             <para>
             The values are used as integers except 'name' values that have to be quoted with " or ' character;
             and 'value' values that may be quoted with " or ' character to sign that string comparison is
             required. Indexing is made by order.
             </para>
             </remarks>
             <param name="path">The path string.</param>
             <returns>The requested descendant item.</returns>
        </member>
        <member name="P:Pr22.Util.Variant.ID">
            <summary>
            The Id of the variant.
            </summary>
        </member>
        <member name="P:Pr22.Util.Variant.Name">
            <summary>
            The name of the variant.
            </summary>
        </member>
        <member name="P:Pr22.Util.Variant.Type">
            <summary>
            The type of the variant. (ReadOnly)
            </summary>
        </member>
        <member name="P:Pr22.Util.Variant.Size">
            <summary>
            The item size of the variant. (ReadOnly)
            </summary>
        </member>
        <member name="P:Pr22.Util.Variant.NItems">
            <summary>
            The number of items in the variant. (ReadOnly)
            This value is useful for array and list type variants.
            </summary>
        </member>
        <member name="P:Pr22.Util.Variant.gxi32">
            <summary>
            You can update the variant's type and value by setting this property.
            </summary>
        </member>
        <member name="P:Pr22.Util.Variant.gxi64">
            <summary>
            You can update the variant's type and value by setting this property.
            </summary>
        </member>
        <member name="P:Pr22.Util.Variant.gxu32">
            <summary>
            You can update the variant's type and value by setting this property.
            </summary>
        </member>
        <member name="P:Pr22.Util.Variant.gxu64">
            <summary>
            You can update the variant's type and value by setting this property.
            </summary>
        </member>
        <member name="P:Pr22.Util.Variant.gxf32">
            <summary>
            You can update the variant's type and value by setting this property.
            </summary>
        </member>
        <member name="P:Pr22.Util.Variant.gxf64">
            <summary>
            You can update the variant's type and value by setting this property.
            </summary>
        </member>
        <member name="P:Pr22.Util.Variant.StringUni">
            <summary>
            You can update the variant's type and value by setting this property.
            </summary>
        </member>
        <member name="P:Pr22.Util.Variant.IntArray">
            <summary>
            You can update the variant's type and value by setting this property.
            </summary>
        </member>
        <member name="P:Pr22.Util.Variant.ByteArray">
            <summary>
            You can update the variant's type and value by setting this property.
            </summary>
        </member>
        <member name="P:Pr22.Util.Variant.Frame">
            <summary>
            You can update the variant's type and value by setting this property.
            </summary>
        </member>
        <member name="P:Pr22.Util.Variant.List">
            <summary>
            You can add a new item to a list type variant by using this property and the += operator.
            </summary>
            <example><code>list_variant.List += new Variant(0, 5);</code></example>
        </member>
        <member name="P:Pr22.Util.Variant.Item(System.Int32)">
            <summary>
            Returns an item of the list type variant.
            </summary>
            <param name="ix">The index of the requested item.</param>
            <returns>The requested item.</returns>
        </member>
        <member name="P:Pr22.Util.Variant.NChildren">
            <summary>
            The number of children in the variant. (ReadOnly)
            </summary>
        </member>
        <member name="T:Pr22.Util.Variant.NullT">
            <summary>
            Value used for constructing a NULL type variant.
            </summary>
        </member>
        <member name="F:Pr22.Util.Variant.NullT.Null">
            <summary>
            Value used for constructing a NULL type variant.
            </summary>
        </member>
        <member name="T:Pr22.Util.Variant.ListT">
            <summary>
            Value used for constructing a list type variant.
            </summary>
        </member>
        <member name="F:Pr22.Util.Variant.ListT.List">
            <summary>
            Value used for constructing a list type variant.
            </summary>
        </member>
        <member name="T:Pr22.Util.Variant.Types">
            <summary>
            Available variant types.
            </summary>
            <remarks>The values with AC tag are usable for creation only. For
            these types the value is automatically converted to the proper data type.</remarks>
            <remarks>The values with AS tag are usable for creation only. For
            these types the value is automatically converted to the proper string type.</remarks>
        </member>
        <member name="F:Pr22.Util.Variant.Types.Null">
            <summary>NULL type (size: 0; nitems: 1)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.Int">
            <summary>Integer type (size: 0, 1, 2, 4, 8; nitems: 1)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.Uint">
            <summary>Unsigned integer type (size: 0, 1, 2, 4, 8; nitems: 1)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.Float">
            <summary>Floating point type (size: 0, 4, 8; nitems: 1)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.DateTime">
            <summary>Datetime type (size: 0, 8; nitems: 1)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.Array">
            <summary>NULL type array /NULL array/ (size: 0; nitems: x)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.IntArray">
            <summary>Integer type array (size: 0, 1, 2, 4, 8; nitems: x)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.UintArray">
            <summary>Unsigned integer type array (size: 0, 1, 2, 4, 8; nitems: x)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.FloatArray">
            <summary>Floating point type array (size: 0, 4, 8; nitems: x)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.DateTimeArray">
            <summary>Datetime type array (size: 0, 8; nitems: x).</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.List">
            <summary>List type (size=nitems: number of items)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.Binary">
            <summary>Binary type (size=number of bytes; nitems: 1)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.Ascii">
            <summary>String type in ASCII format (size=number of characters; nitems: 1)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.Unicode">
            <summary> String type in unicode format (size=number of characters; nitems: 1)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.Container">
            <summary>Internally used binary structure (size=number of codes; nitems: 1)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.ACAscii">
            <summary>String type in ASCII format (size=number of characters; nitems: 1) (see remarks)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.ACUnicode">
            <summary>String type in unicode format (size=number of characters; nitems: 1) (see remarks)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.ASAscii">
            <summary>String type in ASCII format (size=number of characters; nitems: 1) (see remarks)</summary>
        </member>
        <member name="F:Pr22.Util.Variant.Types.ASUnicode">
            <summary>String type in unicode format (size=number of characters; nitems: 1) (see remarks)</summary>
        </member>
        <member name="T:Pr22.Util.Variant.ListPropT">
            <summary>
            Nested class used by the list property.
            </summary>
        </member>
        <member name="T:Pr22.Control.UserData">
            <summary>
            User storage data controller class.
            </summary>
        </member>
        <member name="M:Pr22.Control.UserData.GetSize">
            <summary>
            Returns the size of the user data.
            </summary>
            <returns>The size of the user data.</returns>
        </member>
        <member name="M:Pr22.Control.UserData.Read">
            <summary>
            Returns the stored user data.
            </summary>
            <returns>The stored user data.</returns>
        </member>
        <member name="M:Pr22.Control.UserData.Write(System.Byte[])">
            <summary>
            Writes the user data to the device.
            </summary>
            <param name="data">The data to store.</param>
        </member>
        <member name="T:Pr22.Util.VariantId">
            <summary>
            IDs of <see cref="T:Pr22.Util.Variant"/> data.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Root">
            <summary>
            The root document structure.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.PageList">
            <summary>
            List of pages.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.TaskList">
            <summary>
            List of tasks.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Document">
            <summary>
            Document type. Integer value to distinguish different document pages.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.FieldList">
            <summary>
            List of fields.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Field">
            <summary>
            Field code. It encodes the <c>FieldId</c> and the <c>FieldSource</c> values.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.FieldValue">
            <summary>
            Raw field value data.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Checksum">
            <summary>
            Field <c>Status</c>.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Confidence">
            <summary>
            Field confidence. Value is in 0-1000 range, or -1 if not set.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.WindowFrame">
            <summary>
            <see cref="T:Pr22.Util.Frame"/> coordinates in micrometers.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.WindowFullFrame">
            <summary>
            Nominal <see cref="T:Pr22.Util.Frame"/> coordinates in micrometers.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.FormattedValue">
            <summary>
            Formatted field value data.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.StandardizedValue">
            <summary>
            Standardized field value data.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Correction">
            <summary>
            Number of corrected errors.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.FieldCompares">
            <summary>
            Array of <c>FieldCompare</c> data.
            </summary> 
        </member>
        <member name="F:Pr22.Util.VariantId.CheckDetails">
            <summary>
            Array of field <c>Checking</c> details.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Image">
            <summary>
            A <see cref="T:Pr22.Imaging.RawImage"/> object.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.ImageList">
            <summary>
            List of images.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.ImageFrame">
            <summary>
            <see cref="T:Pr22.Util.Frame"/> coordinates in 1/16 pixel.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Sample">
            <summary>
            Sample <see cref="T:Pr22.Imaging.RawImage"/> for the field.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.DeviceInfo">
            <summary>
            The root of the device info data.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.DeviceId">
            <summary>
            Device name.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Light">
            <summary>
            A <c>Light</c> value.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.CapTime">
            <summary>
            Timestamp of the scan.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Page">
            <summary>
            Page Id.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.HWType">
            <summary>
            Hardware module type <see cref="T:Pr22.Util.HWType"/>.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.StatledList">
            <summary>
            List of status led colors.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Keyboard">
            <summary>
            List of available key code values.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Power">
            <summary>
            Power testing capability.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Version">
            <summary>
            Version info data.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.WindowList">
            <summary>
            List of object window sizes.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Capability">
            <summary>
            Scanning window capability info.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Barcode">
            <summary>
            Barcode type.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.BarcodeValue">
            <summary>
            Barcode binary data.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Ocr">
            <summary>
            OCR module version.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.OcrRowList">
            <summary>
            List of OCR rows.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.OcrRow">
            <summary>
            OCR row.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.OcrChar">
            <summary>
            OCR character.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.OQCA">
            <summary>
            Quality assurance alert signals.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.OQCRotation">
            <summary>
            Rotation value for quality assurance.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.OQCHeight">
            <summary>
            Height value for quality assurance.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.OQCWidth">
            <summary>
            Width value for quality assurance.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.OQCHangout">
            <summary>
            Hangout value for quality assurance.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.OQCDistance">
            <summary>
            Distance value for quality assurance.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.OQCContrast">
            <summary>
            Contrast value for quality assurance.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.OQCShape">
            <summary>
            Shape confidence for quality assurance.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.ECard">
            <summary>
            RFU
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.ECardFileList">
            <summary>
            List of <c>ECard</c> files.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.ECardFile">
            <summary>
            <c>ECard</c> file Id.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.ECardFileData">
            <summary>
            Data of an <c>ECard</c> file.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.CertIdList">
            <summary>
            List of certificate IDs.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.DGList">
            <summary>
            List of <c>ECard</c> file IDs.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Card">
            <summary>
            Serial number of an <c>ECard</c>.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.CardType">
            <summary>
            <c>ECard</c> type string.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.CardAtr">
            <summary>
            <c>ECard</c> ATR data.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.MemorySize">
            <summary>
            Size of the memory area of a Storage Card in bytes.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.MemoryBlock">
            <summary>
            Size of one block of memory area of a Storage Card in bytes.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.CardCap">
            <summary>
            <c>ECard</c> capability data.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.ChipType">
            <summary>
            Chip type data.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Common">
            <summary>
            RFU
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.TimeStamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Duration">
            <summary>
            Duration.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.WarnList">
            <summary>
            RFID communication warning list.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Task">
            <summary>
            RFU
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.Finger">
            <summary>
            <c>FingerPosition</c>.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.FingerType">
            <summary>
            Finger <c>ImpressionType</c>.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.FingerNistQuality">
            <summary>
            NIST finger image quality value.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.FingerDryWet">
            <summary>
            Finger humidity level.
            </summary>
        </member>
        <member name="F:Pr22.Util.VariantId.FingerFraction">
            <summary>
            Finger fraction level.
            </summary>
        </member>
        <member name="T:Pr22.ECardHandling.NamespaceDoc">
            <summary>
            ECard-related enumerations and classes.
            </summary>
        </member>
        <member name="T:Pr22.ECardHandling.Application">
            <summary>
            Applications on the <c>ECard</c>.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.Application.None">
            <summary>
            No application.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.Application.Passport">
            <summary>
            ePassport application.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.Application.ID">
            <summary>
            eID application.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.Application.Sign">
            <summary>
            eSign application.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.Application.ISODL">
            <summary>
            ISO Driving License application.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.Application.NFC">
            <summary>
            Near Field Communication application.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.Application.EDL">
            <summary>
            European Driving License application.
            </summary>
        </member>
        <member name="T:Pr22.ECardHandling.FileId">
            <summary>
            Files on the <c>ECard</c>.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.Com">
            <summary>
            Common content file.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.CardAccess">
            <summary>
            Card Access parameter file.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.CardSecurity">
            <summary>
            Card Security parameter file.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.Cvca">
            <summary>
            Card Verifiable parameter file.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.Sod">
            <summary>
            Security Object file.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.CertDS">
            <summary>
            Document Signer certificate file.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.CertCSCA">
            <summary>
            Country Signing CA certificate file.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.All">
            <summary>
            All files.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.GeneralData">
            <summary>
            General data.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.PersonalDetails">
            <summary>
            Personal details.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.IssuerDetails">
            <summary>
            Issuer details.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.Portrait">
            <summary>
            Portrait.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.Signature">
            <summary>
            Signature.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.Face">
            <summary>
            Biometric face.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.Finger">
            <summary>
            Biometric finger.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.Iris">
            <summary>
            Biometric iris.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.OtherBiometricData">
            <summary>
            Other biometric data.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.DomesticData">
            <summary>
            Domestic data.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.AAData">
            <summary>
            Active authentication data.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.AnyFace">
            <summary>
            Any face or portrait.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.TocFile">
            <summary>
            Table of content data.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.FileId.EapData">
            <summary>
            Extended access control/proctection data.
            </summary>
        </member>
        <member name="T:Pr22.ECardHandling.File">
            <summary>
            <c>Ecard</c> file identifier class.
            </summary>
            <remarks>
            Generally <see cref="T:Pr22.ECard"/>s contain data in files called <c>Data Groups</c>.
            Different type of documents (e.g. ePassport and ISO-DL) stores the same data in
            different data group. Our SDK contains <see cref="T:Pr22.ECardHandling.FileId"/>s - logical file identifiers -
            to identify data groups by their content next to the numerical file identifiers -
            <see cref="M:Pr22.ECardHandling.File.DG(System.Int32)"/>. Both of them are usable in certain situations. They can be
            converted to each other by the <see cref="M:Pr22.ECard.ConvertFileId(Pr22.ECardHandling.File)"/> method.
            </remarks>
        </member>
        <member name="F:Pr22.ECardHandling.File.Id">
            <summary>
            Id of the file.
            </summary>
        </member>
        <member name="M:Pr22.ECardHandling.File.#ctor(System.Int32)">
            <summary>
            New file identifier.
            </summary>
            <param name="FileIndex">Id of the file.</param>
        </member>
        <member name="M:Pr22.ECardHandling.File.op_Implicit(Pr22.ECardHandling.FileId)~Pr22.ECardHandling.File">
            <summary>
            Automatic conversion from FileId to File.
            </summary>
            <param name="fid">The source FileId.</param>
            <returns>The converted File.</returns>
        </member>
        <member name="M:Pr22.ECardHandling.File.#ctor(Pr22.ECardHandling.FileId)">
            <summary>
            New file identifier.
            </summary>
            <param name="fileId">Id of the file.</param>
        </member>
        <member name="M:Pr22.ECardHandling.File.DG(System.Int32)">
            <summary>
            New file identifier.
            </summary>
            <param name="dgid">Data group number.</param>
            <returns>The file identifier.</returns>
        </member>
        <member name="M:Pr22.ECardHandling.File.Block(System.Int32,System.Int32)">
            <summary>
            New file identifier of a storage card.
            </summary>
            <param name="block">Block number.</param>
            <param name="memsize">Number of bytes to read.</param>
            <returns>The file identifier.</returns>
        </member>
        <member name="M:Pr22.ECardHandling.File.Block(System.Int32)">
            <summary>
            New file identifier of a storage card.
            </summary>
            <param name="block">Block number.</param>
            <returns>The file identifier.</returns>
        </member>
        <member name="M:Pr22.ECardHandling.File.MemAddress(System.Int32,System.Int32)">
            <summary>
            New file identifier of a storage card.
            </summary>
            <param name="addr">Memory address to read from.</param>
            <param name="memsize">Number of bytes to read.</param>
            <returns>The file identifier.</returns>
        </member>
        <member name="M:Pr22.ECardHandling.File.MemAddress(System.Int32)">
            <summary>
            New file identifier of a storage card.
            </summary>
            <param name="addr">Memory address to read from.</param>
            <returns>The file identifier.</returns>
        </member>
        <member name="M:Pr22.ECardHandling.File.Sector(System.Int32,System.Int32)">
            <summary>
            New file identifier of a storage card.
            </summary>
            <param name="sector">Sector number.</param>
            <param name="memsize">Number of bytes to read.</param>
            <returns>The file identifier.</returns>
        </member>
        <member name="M:Pr22.ECardHandling.File.Sector(System.Int32)">
            <summary>
            New file identifier of a storage card.
            </summary>
            <param name="sector">Sector number.</param>
            <returns>The file identifier.</returns>
        </member>
        <member name="M:Pr22.ECardHandling.File.ToString">
            <summary>
            Returns string representation of the file Id.
            </summary>
            <returns>String representation of the file Id.</returns>
        </member>
        <member name="T:Pr22.ECardHandling.AuthProcess">
            <summary>
            Authentication IDs.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.AuthProcess.None">
            <summary>
            No authentication.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.AuthProcess.Passive">
            <summary>
            Passive Authentication.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.AuthProcess.Terminal">
            <summary>
            Terminal Authentication.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.AuthProcess.PACE">
            <summary>
            Password Authenticated Connection Establishment.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.AuthProcess.BAC">
            <summary>
            Basic Access Control.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.AuthProcess.Chip">
            <summary>
            Chip Authentication.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.AuthProcess.Active">
            <summary>
            Active Authentication.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.AuthProcess.SelectApp">
            <summary>
            Select Application.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.AuthProcess.BAP">
            <summary>
            Basic Access Protection.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.AuthProcess.Block">
            <summary>
            Block authentication.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.AuthProcess.InitTerminal">
            <summary>
            Init Terminal Authentication.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.AuthProcess.CompleteTerminal">
            <summary>
            Complete Terminal Authentication.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.AuthProcess.StorageCard">
            <summary>
            Storage Card authentication.
            </summary>
        </member>
        <member name="T:Pr22.ECardHandling.AuthLevel">
            <summary>
            Level of the authentication.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.AuthLevel.Max">
            <summary>
            Maximal authentication.
            <remarks>
            Execute all of the authentications, even if they are redundant or not necessary to
            read the files.
            </remarks>
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.AuthLevel.Min">
            <summary>
            Minimal authentication.
            <remarks>
            Execute only those authentications that are essential to read the files.
            </remarks>
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.AuthLevel.Opt">
            <summary>
            Optimal authentication.
            <remarks>
            Execute all of those authentications that are absolutely necessary to determine
            the authenticity of the document. This method avoids performing authentications
            that are redundant or not necessary to read the files.
            </remarks>
            </summary>
        </member>
        <member name="T:Pr22.Task.NamespaceDoc">
            <summary>
            Task data and task control classes.
            </summary>
        </member>
        <member name="T:Pr22.Task.TaskControl">
            <summary>
            Process controller class.
            </summary>
        </member>
        <member name="M:Pr22.Task.TaskControl.Stop">
            <summary>
            Stops a previously started background task.
            </summary>
        </member>
        <member name="M:Pr22.Task.TaskControl.Wait">
            <summary>
            Waits for a previously started background task. This method has
            to be called always, even when the task has already finished.
            </summary>
        </member>
        <member name="M:Pr22.Task.TaskControl.GetState">
            <summary>
            Returns the state of the previously started background task.
            </summary>
            <returns>State of the background task in percentage.</returns>
        </member>
        <member name="T:Pr22.Processing.Field">
            <summary>
            The <c>Field</c> is the base element of document analyzing results.
            </summary>
            <remarks>
            The <c>Field</c> always contains an Id to give meaning for the data, the read
            data that can be binary or textual (or numeric values can be handled as textual
            data), and the status information of checking algorithms. If the <c>Field</c>
            is image-related then image data or image frame can be requested.
            </remarks>
        </member>
        <member name="F:Pr22.Processing.Field.FieldRef">
            <summary>
            Field identification data.
            </summary>
        </member>
        <member name="M:Pr22.Processing.Field.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:Pr22.Processing.Field.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.Processing.Field.GetImage">
            <summary>
            Returns the <see cref="T:Pr22.Imaging.RawImage"/> of the <c>Field</c>.
            </summary>
            <returns>The image of the field.</returns>
        </member>
        <member name="M:Pr22.Processing.Field.GetStatus">
            <summary>
            Returns the <see cref="T:Pr22.Processing.Status"/> information of checking algorithms for
            the <c>Field</c>.
            </summary>
            <returns>The Status information.</returns>
        </member>
        <member name="M:Pr22.Processing.Field.GetDetailedStatus">
            <summary>
            Returns a list of detailed status information of <see cref="T:Pr22.Processing.Checking"/>
            algorithms for the <c>Field</c>.
            </summary>
            <returns>List of detailed status information.</returns>
        </member>
        <member name="M:Pr22.Processing.Field.GetRawStringValue">
            <summary>
            Returns the string data of the <c>Field</c> as it is read, with separator
            characters, including checksum.
            </summary>
            <returns>The raw string value.</returns>
        </member>
        <member name="M:Pr22.Processing.Field.GetFormattedStringValue">
            <summary>
            Returns the formatted string data of the <c>Field</c>. The separator characters
            are replaced with spaces and checksum values are not included.
            </summary>
            <returns>The formatted string value.</returns>
        </member>
        <member name="M:Pr22.Processing.Field.GetStandardizedStringValue">
            <summary>
            Returns the data of the <c>Field</c> converted to a standard format. Even
            the whole value can be replaced. E.g. converted from inches to centimeters.
            </summary>
            <returns>The standardized string value.</returns>
        </member>
        <member name="M:Pr22.Processing.Field.GetBasicStringValue">
            <summary>
            Returns the string data of the <c>Field</c> in the least modified format.
            </summary>
            <returns>The basic string value.</returns>
        </member>
        <member name="M:Pr22.Processing.Field.GetBestStringValue">
            <summary>
            Returns the string data of the <c>Field</c> in the most convenient format. 
            </summary>
            <returns>The best string value.</returns>
        </member>
        <member name="M:Pr22.Processing.Field.GetBinaryValue">
            <summary>
            Returns the binary data of the <c>Field</c>.
            </summary>
            <returns>The binary value.</returns>
        </member>
        <member name="M:Pr22.Processing.Field.GetFrame">
            <summary>
            Returns the geometric location of the <c>Field</c>.
            </summary>
            <returns>The Frame of the <c>Field</c>.</returns>
        </member>
        <member name="M:Pr22.Processing.Field.ToVariant">
            <summary>
            Returns the internal variant data to query special <c>Field</c> information.
            </summary>
            <returns>The data.</returns>
        </member>
        <member name="T:Pr22.Processing.FieldCompare">
            <summary>
            Result data of <c>Field</c> comparison.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldCompare.field1">
            <summary>
            Reference of the compared field #1.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldCompare.field2">
            <summary>
            Reference of the compared field #2.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldCompare.confidence">
            <summary>
            Result of comparison in 0-1000 range.
            </summary>
        </member>
        <member name="T:Pr22.ECardHandling.Certificates">
            <summary>
            Certificate manager class.
            </summary>
            <remarks>
            The system is equipped with different certificate manager objects that are
            designed to realize different ways of certificate usage. Certificates can
            be used globally (for all readers of all devices), or specifically for one
            <see cref="T:Pr22.DocumentReaderDevice"/> or one <see cref="T:Pr22.ECardReader"/> or one
            <see cref="T:Pr22.ECard"/>.
            </remarks>
        </member>
        <member name="M:Pr22.ECardHandling.Certificates.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:Pr22.ECardHandling.Certificates.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.ECardHandling.Certificates.Load(Pr22.Processing.BinData)">
            <summary>
            Loads a certificate to the manager.
            </summary>
            <param name="publicKey">The certificate to load.</param>
            <returns>Id of the certificate.</returns>
        </member>
        <member name="M:Pr22.ECardHandling.Certificates.Load(Pr22.Processing.BinData,Pr22.Processing.BinData)">
            <summary>
            Loads a certificate and its private key to the manager.
            </summary>
            <param name="publicKey">The certificate to load.</param>
            <param name="privateKey">The private key to load.</param>
            <returns>Id of the certificate.</returns>
        </member>
        <member name="M:Pr22.ECardHandling.Certificates.LoadFromStore(System.String)">
            <summary>
            Loads certificates from a certificate store.
            </summary>
            <param name="storeName">The name of the certificate store.</param>
        </member>
        <member name="M:Pr22.ECardHandling.Certificates.Clear(Pr22.ECardHandling.AuthProcess,Pr22.ECardHandling.Certificates.Property)">
            <summary>
            Removes certificates from the manager by authentication type and/or validity status.
            </summary>
            <param name="authentication">Certificate selection filter for authentications. Use value
            <see cref="F:Pr22.ECardHandling.AuthProcess.None"/> for selecting all the authentications.</param>
            <param name="certprop">Certificate selection filter constants.</param>
        </member>
        <member name="M:Pr22.ECardHandling.Certificates.Del(System.Int32)">
            <summary>
            Removes certificate from manager by Id.
            </summary>
            <param name="id">Id of a certificate returned by the Load method.</param>
        </member>
        <member name="T:Pr22.ECardHandling.Certificates.Property">
            <summary>
            Certificate selection filtering constants.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.Certificates.Property.Expired">
            <summary>
            Select the expired certificates.
            </summary>
        </member>
        <member name="F:Pr22.ECardHandling.Certificates.Property.Revoked">
            <summary>
            Select the revoked certificates.
            </summary>
        </member>
        <member name="T:Pr22.Imaging.NamespaceDoc">
            <summary>
            Image-related enumerations and classes.
            </summary>
        </member>
        <member name="T:Pr22.Imaging.Light">
            <summary>
            Usable illuminations.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.Light.Off">
            <summary>
            Light off.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.Light.All">
            <summary>
            All the lights.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.Light.White">
            <summary>
            White light.
            </summary>
            <remarks>
            The image scanned under normal white illumination.
            Reflection removing is applied if this technology is supported by the scanner.
            </remarks>
        </member>
        <member name="F:Pr22.Imaging.Light.Infra">
            <summary>
            Infrared light. ~900nm
            </summary>
        </member>
        <member name="F:Pr22.Imaging.Light.UV">
            <summary>
            Ultraviolet light. ~365nm
            </summary>
        </member>
        <member name="F:Pr22.Imaging.Light.Coaxial">
            <summary>
            Specially directed (coaxial) white light for examination of certain security foils.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.Light.OVD">
            <summary>
            White light with accumulated hologram effects. It is designed for visualization of holograms.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.Light.Photo">
            <summary>
            High resolution image targeted and focused on the photo area of passports.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.Light.Blue">
            <summary>
            Blue light.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.Light.Red">
            <summary>
            Red light.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.Light.CleanUV">
            <summary>
            Modified UV image with backgroud masking.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.Light.CleanOVD">
            <summary>
            Modified OVD image with background masking for hologram visualization.
            </summary>
        </member>
        <member name="T:Pr22.Imaging.PagePosition">
            <summary>
            Page selection values.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.PagePosition.Next">
            <summary>
            The next page will be scanned. i.e. another page of the current document even another
            document.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.PagePosition.Current">
            <summary>
            The images to be scanned will be appended to the current page.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.PagePosition.First">
            <summary>
            The first page will be scanned. It means that all the internally stored data
            (images, documents) will be removed from the system.
            </summary>
        </member>
        <member name="T:Pr22.Imaging.FingerPosition">
            <summary>
            Finger position codes as specified in ANSI/NIST-ITL 1 documentation.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.RightThumb">
            <summary>
            Right thumb.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.RightIndex">
            <summary>
            Right index finger.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.RightMiddle">
            <summary>
            Right middle finger.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.RightRing">
            <summary>
            Right ring finger.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.RightLittle">
            <summary>
            Right little finger.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.LeftThumb">
            <summary>
            Left thumb.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.LeftIndex">
            <summary>
            Left index finger.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.LeftMiddle">
            <summary>
            Left middle finger.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.LeftRing">
            <summary>
            Left ring finger.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.LeftLittle">
            <summary>
            Left little finger.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.PlainRightThumb">
            <summary>
            Plain right thumb.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.PlainLeftThumb">
            <summary>
            Plain left thumb.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.PlainRight4Fingers">
            <summary>
            Plain right 4 fingers.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.PlainLeft4Fingers">
            <summary>
            Plain left 4 fingers.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.PlainThumbs">
            <summary>
            Left and right thumbs.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.FingerPosition.BothIndexes">
            <summary>
            Left and right index fingers.
            </summary>
        </member>
        <member name="T:Pr22.ECard">
            <summary>
            Electronically readable card (Smartcard, RFID card or Magnetic stripe card).
            </summary>
        </member>
        <member name="F:Pr22.ECard.Serial">
            <summary>
            Serial number of the card.
            </summary>
            <remarks>
            In numerous cases, the serial number is random. In some other cases, cards have no serial at all.
            For such cards, the system generates a fictional number.
            </remarks>
        </member>
        <member name="M:Pr22.ECard.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.ECard.GetAuthReferenceData">
            <summary>
            Returns data necessary for the next authentication process.
            </summary>
            <returns>Authentication data.</returns>
        </member>
        <member name="M:Pr22.ECard.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:Pr22.ECard.Disconnect">
            <summary>
            Finishes usage of the <see cref="T:Pr22.ECard"/>.
            </summary>
        </member>
        <member name="M:Pr22.ECard.GetFile(Pr22.ECardHandling.File)">
            <summary>
            Returns the data of a file.
            </summary>
            <param name="fileId">File identifier.</param>
            <returns>Binary data.</returns>
        </member>
        <member name="M:Pr22.ECard.CheckHash(Pr22.ECardHandling.File)">
            <summary>
            Checks the integrity of a file.
            </summary>
            <param name="fileId">File identifier.</param>
            <returns>Ok or failed.</returns>
        </member>
        <member name="M:Pr22.ECard.GetNextAuthentication(System.Boolean)">
            <summary>
            Returns the identifier of the next suggested authentication to proceed.
            </summary>
            <param name="forceNext">Skip the next authentication and return the one suggested after that.</param>
            <returns>Authentication identifier.</returns>
        </member>
        <member name="M:Pr22.ECard.Authenticate(Pr22.ECardHandling.AuthProcess,Pr22.Processing.BinData,System.Int32)">
            <summary>
            Executes an authentication process.
            </summary>
            <param name="authentication">Authentication identifier.</param>
            <param name="additionalData">Data needed for authentication.</param>
            <param name="selector">Selector parameter for certain authentications.</param>
            <remarks>
            In some special cases, additional system information is necessary for computing
            <paramref name="additionalData"/>.
            These pieces of information can be requested by the <see cref="M:Pr22.ECard.GetAuthReferenceData"/> method.
            </remarks>
        </member>
        <member name="M:Pr22.ECard.ConvertFileId(Pr22.ECardHandling.File)">
            <summary>
            Converts file identifier values: general IDs to data group number and vice versa.
            </summary>
            <param name="file">File Id to convert.</param>
            <returns>Converted file Id.</returns>
        </member>
        <member name="M:Pr22.ECard.GetAuthResult">
            <summary>
            Returns the <c>ECard</c> authentication results in document form.
            </summary>
            <returns><c>ECard</c> authentication results in <see cref="T:Pr22.Processing.Document"/> form.</returns>
        </member>
        <member name="P:Pr22.ECard.Info">
            <summary>
            Returns the card information.
            </summary>
        </member>
        <member name="P:Pr22.ECard.Applications">
            <summary>
            Returns a list of available <c>ECard</c> <see cref="T:Pr22.ECardHandling.Application">Application</see>s.
            </summary>
            <remarks>
            When the list is empty or contains only <see cref="F:Pr22.ECardHandling.Application.None"/> that
            means that the list cannot be requested from the <c>ECard</c>, but the system tries to select
            application on card.
            </remarks>
        </member>
        <member name="P:Pr22.ECard.Files">
            <summary>
            Returns a list of identifiers of the available <see cref="T:Pr22.ECardHandling.File">File</see>s.
            </summary>
        </member>
        <member name="P:Pr22.ECard.CertificateManager">
            <summary>
            Returns the certificate manager that stores certificates for the current
            <c>ECard</c> only.
            </summary>
        </member>
        <member name="T:Pr22.ECard.Information">
            <summary>
            Class for storing information on an <see cref="T:Pr22.ECard"/>.
            </summary>
        </member>
        <member name="M:Pr22.ECard.Information.ToVariant">
            <summary>
            Returns the internal variant data to query special <see cref="T:Pr22.ECard"/> information.
            </summary>
            <returns>The data.</returns>
        </member>
        <member name="M:Pr22.ECard.Information.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.ECard.Information.Dispose">
            <summary>
            </summary>
        </member>
        <member name="P:Pr22.ECard.Information.CardType">
            <summary>
            Returns the <see cref="T:Pr22.ECard"/> type identifier string.
            </summary>
        </member>
        <member name="T:Pr22.ECardReader">
            <summary>
            Electronic card reader (Smartcard, RFID card or Magnetic stripe card) module.
            </summary>
        </member>
        <member name="M:Pr22.ECardReader.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:Pr22.ECardReader.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.ECardReader.ToString">
            <summary>
            Returns the name of the reader.
            </summary>
            <returns>The name of the reader.</returns>
        </member>
        <member name="M:Pr22.ECardReader.GetCards">
            <summary>
            Returns a list of the available <see cref="T:Pr22.ECard"/>s.
            </summary>
            <returns>List of <see cref="T:Pr22.ECard"/>s.</returns>
        </member>
        <member name="M:Pr22.ECardReader.ConnectCard(System.Int32)">
            <summary>
            Starts using an <see cref="T:Pr22.ECard"/>.
            </summary>
            <param name="cardNo">The ordinal number of the card in the last requested cardlist.</param>
            <returns>The <see cref="T:Pr22.ECard"/> handling class.</returns>
        </member>
        <member name="M:Pr22.ECardReader.Open">
            <summary>
            Starts using the current <c>ECardReader</c>.
            </summary>
        </member>
        <member name="M:Pr22.ECardReader.Close">
            <summary>
            Ends the usage of the current <c>ECardReader</c>.
            </summary>
            <remarks>
            This method is usable to communicate with an <c>ECardReader</c> outside our SDK.
            </remarks>
        </member>
        <member name="M:Pr22.ECardReader.StartRead(Pr22.ECard,Pr22.Task.ECardTask)">
            <summary>
            Begins the authentication and reading process in a background thread.
            </summary>
            <param name="card">The <see cref="T:Pr22.ECard"/> to process.</param>
            <param name="task">List of files and authentication level.</param>
            <returns>A <see cref="T:Pr22.Task.TaskControl"/> object.</returns>
            <remarks>After the process is finished the <see cref="M:Pr22.Task.TaskControl.Wait"/>
            method must be called.</remarks>
        </member>
        <member name="P:Pr22.ECardReader.Info">
            <summary>
            Returns the card reader information.
            </summary>
        </member>
        <member name="P:Pr22.ECardReader.CertificateManager">
            <summary>
            Returns the certificate manager that stores certificates for the current
            <see cref="T:Pr22.ECardReader"/> device only.
            </summary>
        </member>
        <member name="T:Pr22.ECardReader.Information">
            <summary>
            Class for storing information on an <see cref="T:Pr22.ECardReader"/>.
            </summary>
        </member>
        <member name="M:Pr22.ECardReader.Information.Dispose">
            <summary>
            </summary>
        </member>
        <member name="P:Pr22.ECardReader.Information.HwType">
            <summary>
            Type of the <see cref="T:Pr22.ECardReader"/>.
            </summary>
        </member>
        <member name="T:Pr22.Processing.Page">
            <summary>
            Stores the images taken by the <see cref="M:Pr22.DocScanner.Scan(Pr22.Task.DocScannerTask,Pr22.Imaging.PagePosition)"/> method.
            </summary>
            <remarks>
            Images scanned earlier are also available with the <see cref="M:Pr22.DocScanner.GetPage(System.Int32)"/>
            method.
            </remarks>
        </member>
        <member name="M:Pr22.Processing.Page.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:Pr22.Processing.Page.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.Processing.Page.Del(Pr22.Imaging.Light)">
            <summary>
            Removes a <see cref="T:Pr22.Imaging.DocImage"/> from the <c>Page</c>.
            </summary>
            <remarks>This removal is made only with the current data object. Other calls
            of <see cref="M:Pr22.DocScanner.GetPage(System.Int32)"/> method will contain all the scanned images.</remarks>
            <remarks>This removal is used for omitting certain illuminations from an analyzing
            process.</remarks>
            <param name="light">Id of the Light to remove.</param>
            <returns>A new Page object.</returns>
        </member>
        <member name="M:Pr22.Processing.Page.Select(Pr22.Imaging.Light)">
            <summary>
            Returns a <see cref="T:Pr22.Imaging.DocImage"/>.
            </summary>
            <param name="light">Id of the light.</param>
            <returns>A DocImage.</returns>
        </member>
        <member name="M:Pr22.Processing.Page.SelectByIndex(System.Int32)">
            <summary>
            Returns a <see cref="T:Pr22.Imaging.DocImage"/>.
            </summary>
            <param name="index">Ordinal number of the image.</param>
            <returns>A DocImage.</returns>
        </member>
        <member name="M:Pr22.Processing.Page.Analyze(Pr22.Task.EngineTask)">
            <summary>
            Analyzes the image data of the <c>Page</c> and returns the textual
            and logical data according to <paramref name="task"/>.
            </summary>
            <remarks>This method has the same role as <see cref="M:Pr22.Engine.Analyze(Pr22.Processing.Page,Pr22.Task.EngineTask)"/>.</remarks>
            <param name="task">Specifies data field references to analyze.</param>
            <returns>The result data structure.</returns>
        </member>
        <member name="T:Pr22.DocumentReaderDevice">
            <summary>
            Central class for a document reader device.
            </summary>
            <remarks>
            A device is composed of several modules. These modules can be
            accessed through this class.
            </remarks>
        </member>
        <member name="M:Pr22.DocumentReaderDevice.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:Pr22.DocumentReaderDevice.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.DocumentReaderDevice.#ctor">
            <summary>
            Initializes the Document Reader software.
            </summary>
        </member>
        <member name="M:Pr22.DocumentReaderDevice.#ctor(System.String)">
            <summary>
            Initializes the Document Reader software with a specified property path.
            </summary>
            <remarks>Specified path means the initial data are read from the gxsd.dat file
            from the specified xml node.</remarks>
            <param name="proppath">Name of the xml node of the gxsd.dat file from
            where the initial data should be read.</param>
        </member>
        <member name="M:Pr22.DocumentReaderDevice.GetDeviceList">
            <summary>
            Collects a list of device names for <see cref="M:Pr22.DocumentReaderDevice.UseDevice(System.String)"/> method.
            </summary>
            <returns>List of device names.</returns>
        </member>
        <member name="M:Pr22.DocumentReaderDevice.UseDevice(System.Int32)">
            <summary>
            Starts using a device.
            </summary>
            <param name="devno">Ordinal number of the device to use.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Pr22.DocumentReaderDevice.UseDevice(System.String)">
            <summary>
            Starts using a device.
            </summary>
            <param name="devname">Name of the device to use.</param>
            <remarks>The list of available names can be requested from the <see cref="M:Pr22.DocumentReaderDevice.GetDeviceList"/>.
            </remarks>
            <returns>This object.</returns>
        </member>
        <member name="M:Pr22.DocumentReaderDevice.GetVersion(System.Char)">
            <summary>
            Returns version information of the API.
            </summary>
            <param name="component">Character <c>'A'</c> for version of the .net interface file,
            or character <c>'S'</c> for version of the Passport Reader system.</param>
            <returns>Version string.</returns>
        </member>
        <member name="M:Pr22.DocumentReaderDevice.Close">
            <summary>
            Ends using of the current device.
            </summary>
        </member>
        <member name="M:Pr22.DocumentReaderDevice.SetProperty(System.String,System.String)">
            <summary>
            Sets a property value of the Passport Reader system.
            </summary>
            <remarks>The names and values of the properties are documented in the
            Passport Reader reference manual.</remarks>
            <param name="property">The name of the property.</param>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:Pr22.DocumentReaderDevice.GetProperty(System.String)">
            <summary>
            Returns a property value of the Passport Reader system.
            </summary>
            <remarks>The names and values of the properties are documented in the
            Passport Reader reference manual.</remarks>
            <param name="property">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="E:Pr22.DocumentReaderDevice.ScanStarted">
            <summary>
            Occurs when scanning of a page is started.
            </summary>
        </member>
        <member name="E:Pr22.DocumentReaderDevice.ScanFinished">
            <summary>
            Occurs when scanning of a page is finished.
            </summary>
        </member>
        <member name="E:Pr22.DocumentReaderDevice.ImageScanned">
            <summary>
            Occurs when an image is scanned.
            </summary>
        </member>
        <member name="E:Pr22.DocumentReaderDevice.DocFrameFound">
            <summary>
            Occurs when a new cropped document image is available.
            </summary>
        </member>
        <member name="E:Pr22.DocumentReaderDevice.PreviewCaptured">
            <summary>
            Occurs when a preview image is captured.
            </summary>
        </member>
        <member name="E:Pr22.DocumentReaderDevice.PresenceStateChanged">
            <summary>
            Occurs when the state of the document detection is changed.
            </summary>
        </member>
        <member name="E:Pr22.DocumentReaderDevice.KeyPressed">
            <summary>
            Occurs when a button of the device is pressed or released.
            </summary>
        </member>
        <member name="E:Pr22.DocumentReaderDevice.PowerChanged">
            <summary>
            Occurs when the state of the power is changed.
            </summary>
        </member>
        <member name="E:Pr22.DocumentReaderDevice.Connection">
            <summary>
            Occurs when the used device is disconnected, or when the number
            of devices is changed while no device is used.
            </summary>
        </member>
        <member name="E:Pr22.DocumentReaderDevice.AuthBegin">
            <summary>
            Occurs when an authentication task of an <see cref="T:Pr22.ECard"/> is started.
            </summary>
        </member>
        <member name="E:Pr22.DocumentReaderDevice.AuthWaitForInput">
            <summary>
            Occurs when an authentication task of an <see cref="T:Pr22.ECard"/> is waiting
            for some input data.
            </summary>
        </member>
        <member name="E:Pr22.DocumentReaderDevice.AuthDone">
            <summary>
            Occurs when an authentication task of an <see cref="T:Pr22.ECard"/> is finished.
            </summary>
        </member>
        <member name="E:Pr22.DocumentReaderDevice.ReadBegin">
            <summary>
            Occurs when a reading task of an <see cref="T:Pr22.ECard"/> is started.
            </summary>
        </member>
        <member name="E:Pr22.DocumentReaderDevice.ReadDone">
            <summary>
            Occurs when a reading task of an <see cref="T:Pr22.ECard"/> is finished.
            </summary>
        </member>
        <member name="E:Pr22.DocumentReaderDevice.FileChecked">
            <summary>
            Occurs when a file hash checking task of an <see cref="T:Pr22.ECard"/> is finished.
            </summary>
        </member>
        <member name="E:Pr22.DocumentReaderDevice.DeviceUpdate">
            <summary>
            Occurs when reading or writing of a file stored on the device is started.
            </summary>
        </member>
        <member name="P:Pr22.DocumentReaderDevice.DeviceName">
            <summary>
            Returns the name of the device.
            </summary>
        </member>
        <member name="P:Pr22.DocumentReaderDevice.GlobalCertificateManager">
            <summary>
            Returns the certificate manager that stores certificates for
            all task of the entire process.
            </summary>
        </member>
        <member name="P:Pr22.DocumentReaderDevice.CertificateManager">
            <summary>
            Returns the certificate manager that stores certificates for
            task of the current <c>DocumentReaderDevice</c> device.
            </summary>
        </member>
        <member name="P:Pr22.DocumentReaderDevice.Peripherals">
            <summary>
            Returns the device peripheral controller module of the used
            <c>DocumentReaderDevice</c>.
            </summary>
        </member>
        <member name="P:Pr22.DocumentReaderDevice.Scanner">
            <summary>
            Returns the document scanner module of the used <c>DocumentReaderDevice</c>.
            </summary>
        </member>
        <member name="P:Pr22.DocumentReaderDevice.Readers">
            <summary>
            Returns a list of all the electronic card reader (Smartcard, RFID card or
            Magnetic stripe card) module(s) of the used <c>DocumentReaderDevice</c>.
            </summary>
        </member>
        <member name="P:Pr22.DocumentReaderDevice.Engine">
            <summary>
            Returns the data analyzer module of the used <c>DocumentReaderDevice</c>.
            </summary>
        </member>
        <member name="T:Pr22.Events.NamespaceDoc">
            <summary>
            Event-related enumerations and classes.
            </summary>
        </member>
        <member name="T:Pr22.Events.PageEventArgs">
            <summary>
            Arguments for page related events.
            </summary>
        </member>
        <member name="F:Pr22.Events.PageEventArgs.Page">
            <summary>
            Ordinal number of the page.
            </summary>
        </member>
        <member name="F:Pr22.Events.PageEventArgs.Status">
            <summary>
            Error code result of the capturing process.
            </summary>
        </member>
        <member name="M:Pr22.Events.PageEventArgs.#ctor(System.Int32,Pr22.Exceptions.ErrorCodes)">
            <summary>
            New arguments for page related events.
            </summary>
            <param name="page">Ordinal number of the page.</param>
            <param name="status">Error code result of the scanning process.</param>
        </member>
        <member name="T:Pr22.Events.ImageEventArgs">
            <summary>
            Arguments for image related events.
            </summary>
        </member>
        <member name="F:Pr22.Events.ImageEventArgs.Page">
            <summary>
            Ordinal number of the page.
            </summary>
        </member>
        <member name="F:Pr22.Events.ImageEventArgs.Light">
            <summary>
            <c>Light</c> identifier.
            </summary>
        </member>
        <member name="M:Pr22.Events.ImageEventArgs.#ctor(System.Int32,Pr22.Imaging.Light)">
            <summary>
            New arguments for image related events.
            </summary>
            <param name="page">Ordinal number of the page.</param>
            <param name="light">Light identifier.</param>
        </member>
        <member name="T:Pr22.Events.DetectionEventArgs">
            <summary>
            Arguments for object presence detection events.
            </summary>
        </member>
        <member name="F:Pr22.Events.DetectionEventArgs.State">
            <summary>
            Presence detection state.
            </summary>
        </member>
        <member name="M:Pr22.Events.DetectionEventArgs.#ctor(Pr22.Util.PresenceState)">
            <summary>
            New arguments for object presence detection events.
            </summary>
            <param name="state">Presence detection state.</param>
        </member>
        <member name="T:Pr22.Events.PreviewEventArgs">
            <summary>
            Arguments for preview (live) image capture events.
            </summary>
        </member>
        <member name="M:Pr22.Events.PreviewEventArgs.#ctor">
            <summary>
            New arguments for preview (live) image capture events.
            </summary>
        </member>
        <member name="T:Pr22.Events.ButtonEventArgs">
            <summary>
            Arguments for button pressing events.
            </summary>
        </member>
        <member name="F:Pr22.Events.ButtonEventArgs.KeyCode">
            <summary>
            Identifier of the button.
            </summary>
        </member>
        <member name="F:Pr22.Events.ButtonEventArgs.KeyStatus">
            <summary>
            State of the button.
            </summary>
        </member>
        <member name="M:Pr22.Events.ButtonEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            New arguments for button pressing events.
            </summary>
            <param name="keyCode">Identifier of the button.</param>
            <param name="keyStatus">State of the button.</param>
        </member>
        <member name="T:Pr22.Events.PowerEventArgs">
            <summary>
            Arguments for device power events.
            </summary>
        </member>
        <member name="F:Pr22.Events.PowerEventArgs.State">
            <summary>
            State of the power.
            </summary>
        </member>
        <member name="F:Pr22.Events.PowerEventArgs.Level">
            <summary>
            Level of the power.
            </summary>
        </member>
        <member name="M:Pr22.Events.PowerEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            New arguments for device power events.
            </summary>
            <param name="state">State of the power.</param>
            <param name="level">Level of the power.</param>
        </member>
        <member name="T:Pr22.Events.ConnectionEventArgs">
            <summary>
            Arguments for device connection events.
            </summary>
        </member>
        <member name="F:Pr22.Events.ConnectionEventArgs.DeviceNumber">
            <summary>
            Shows that the event is for connecting or for disconnecting.
            </summary>
        </member>
        <member name="M:Pr22.Events.ConnectionEventArgs.#ctor(System.Int32)">
            <summary>
            New arguments for device connection events.
            </summary>
            <param name="deviceNumber">Connection/disconnection signal.</param>
        </member>
        <member name="T:Pr22.Events.AuthEventArgs">
            <summary>
            Arguments for <see cref="T:Pr22.ECard"/> authentication events.
            </summary>
        </member>
        <member name="F:Pr22.Events.AuthEventArgs.Card">
            <summary>
            The <c>ECard</c>.
            </summary>
        </member>
        <member name="F:Pr22.Events.AuthEventArgs.Authentication">
            <summary>
            Id of the actual authentication.
            </summary>
        </member>
        <member name="F:Pr22.Events.AuthEventArgs.Result">
            <summary>
            Error code result of the authentication process.
            </summary>
        </member>
        <member name="M:Pr22.Events.AuthEventArgs.#ctor(Pr22.ECard,Pr22.ECardHandling.AuthProcess)">
            <summary>
            New arguments for <see cref="T:Pr22.ECard"/> authentication events.
            </summary>
            <param name="card">The ECard.</param>
            <param name="authentication">Id of the actual authentication.</param>
        </member>
        <member name="M:Pr22.Events.AuthEventArgs.#ctor(Pr22.ECard,Pr22.ECardHandling.AuthProcess,Pr22.Exceptions.ErrorCodes)">
            <summary>
            New arguments for <see cref="T:Pr22.ECard"/> authentication events.
            </summary>
            <param name="card">The ECard.</param>
            <param name="authentication">Id of the actual authentication.</param>
            <param name="result">Error code result of the authentication process.</param>
        </member>
        <member name="T:Pr22.Events.FileEventArgs">
            <summary>
            Arguments for <see cref="T:Pr22.ECard"/> reading events.
            </summary>
        </member>
        <member name="F:Pr22.Events.FileEventArgs.Card">
            <summary>
            The <c>ECard</c>.
            </summary>
        </member>
        <member name="F:Pr22.Events.FileEventArgs.FileId">
            <summary>
            Id of the actual file.
            </summary>
        </member>
        <member name="F:Pr22.Events.FileEventArgs.Result">
            <summary>
            Error code result of the reading process.
            </summary>
        </member>
        <member name="M:Pr22.Events.FileEventArgs.#ctor(Pr22.ECard,Pr22.ECardHandling.File,Pr22.Exceptions.ErrorCodes)">
            <summary>
            New arguments for <see cref="T:Pr22.ECard"/> reading events.
            </summary>
            <param name="card">The ECard.</param>
            <param name="fileId">Id of the actual file.</param>
            <param name="result">Error code result of the reading process.</param>
        </member>
        <member name="T:Pr22.Events.UpdateEventArgs">
            <summary>
            Arguments for device usage related events.
            </summary>
        </member>
        <member name="F:Pr22.Events.UpdateEventArgs.part">
            <summary>
            Event specifier Id.
            </summary>
        </member>
        <member name="M:Pr22.Events.UpdateEventArgs.#ctor(System.Int32)">
            <summary>
            New arguments for device usage related events.
            </summary>
            <param name="param1">Event specifier Id.</param>
        </member>
        <member name="T:Pr22.Exceptions.NamespaceDoc">
            <summary>
            Exception classes and error identification constants.
            </summary>
        </member>
        <member name="T:Pr22.Exceptions.ErrorCodes">
            <summary>
            System error codes.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.ENOERR">
            <summary>
            No error.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.ENOENT">
            <summary>
            Entry not found.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.ENOMEM">
            <summary>
            Memory allocation error.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EACCES">
            <summary>
            Permission denied.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EFAULT">
            <summary>
            Bad address or program error.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EBUSY">
            <summary>
            Resource busy.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EEXIST">
            <summary>
            File already exists.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.ENODEV">
            <summary>
            No such device.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EINVAL">
            <summary>
            Invalid parameter.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.ERANGE">
            <summary>
            Data out of range.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EDATA">
            <summary>
            No data available.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.ECOMM">
            <summary>
            Communication error.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.ETIMEDOUT">
            <summary>
            Function timed out.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EOPEN">
            <summary>
            File open error.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.ECREAT">
            <summary>
            File creation error.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EREAD">
            <summary>
            File read error.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EWRITE">
            <summary>
            File write error.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EFILE">
            <summary>
            Invalid data content.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EINVIMG">
            <summary>
            Invalid image.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EINVFUNC">
            <summary>
            Invalid function.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EHWKEY">
            <summary>
            Hardware key does not work properly.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EVERSION">
            <summary>
            Invalid version.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EASSERT">
            <summary>
            Assertion occurred.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EDISCON">
            <summary>
            Device is disconnected.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EIMGPROC">
            <summary>
            Image processing failed.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EAUTH">
            <summary>
            Authenticity cannot be determined.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.ECAPTURE">
            <summary>
            Image capture error.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.EWEAKDEV">
            <summary>
            Insufficient hardware configuration e.g. USB 1.0 port.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.CERT_EXPIRED">
            <summary>
            Certificate is expired.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.CERT_REVOKED">
            <summary>
            Certificate is revoked.
            </summary>
        </member>
        <member name="F:Pr22.Exceptions.ErrorCodes.ECHECK">
            <summary>
            Validation checking failed.
            </summary>
        </member>
        <member name="T:Pr22.Exceptions.General">
            <summary>
            Base exception class for error handling.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.General.#ctor">
            <summary>
            New exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.General.#ctor(System.String)">
            <summary>
            New exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="M:Pr22.Exceptions.General.#ctor(System.String,Pr22.Exceptions.General)">
            <summary>
            New exception.
            </summary>
            <param name="message">Error message.</param>
            <param name="inner">Inner exception.</param>
        </member>
        <member name="T:Pr22.Exceptions.EntryNotFound">
            <summary>
            Entry not found exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.EntryNotFound.#ctor(System.String)">
            <summary>
            New entry not found exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.MemoryAllocation">
            <summary>
            Memory allocation exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.MemoryAllocation.#ctor(System.String)">
            <summary>
            New memory allocation exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.PermissionDenied">
            <summary>
            Permission denied exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.PermissionDenied.#ctor(System.String)">
            <summary>
            New permission denied exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.ProgramFault">
            <summary>
            Program fault exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.ProgramFault.#ctor(System.String)">
            <summary>
            New program fault exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.ResourceBusy">
            <summary>
            Resource busy exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.ResourceBusy.#ctor(System.String)">
            <summary>
            New resource busy exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.NoSuchDevice">
            <summary>
            No such device exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.NoSuchDevice.#ctor(System.String)">
            <summary>
            New no such device exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.InvalidParameter">
            <summary>
            Invalid parameter exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.InvalidParameter.#ctor(System.String)">
            <summary>
            New invalid parameter exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.DataOutOfRange">
            <summary>
            Data out of range exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.DataOutOfRange.#ctor(System.String)">
            <summary>
            New data out of range exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.NoDataAvailable">
            <summary>
            No data available exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.NoDataAvailable.#ctor(System.String)">
            <summary>
            New no data available exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.CommunicationError">
            <summary>
            Communication error exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.CommunicationError.#ctor(System.String)">
            <summary>
            New communication error exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.FunctionTimedOut">
            <summary>
            Function timed out exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.FunctionTimedOut.#ctor(System.String)">
            <summary>
            New function timed out exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.InvalidImage">
            <summary>
            Invalid image exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.InvalidImage.#ctor(System.String)">
            <summary>
            New invalid image exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.InvalidFunction">
            <summary>
            Invalid function exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.InvalidFunction.#ctor(System.String)">
            <summary>
            New invalid function exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.HardwareKey">
            <summary>
            Hardware key exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.HardwareKey.#ctor(System.String)">
            <summary>
            New hardware key exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.InvalidVersion">
            <summary>
            Invalid version exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.InvalidVersion.#ctor(System.String)">
            <summary>
            New invalid version exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.AssertionOccurred">
            <summary>
            Assertion occurred exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.AssertionOccurred.#ctor(System.String)">
            <summary>
            New assertion occurred exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.DeviceIsDisconnected">
            <summary>
            Device is disconnected exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.DeviceIsDisconnected.#ctor(System.String)">
            <summary>
            New device is disconnected exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.ImageProcessingFailed">
            <summary>
            Image processing failed exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.ImageProcessingFailed.#ctor(System.String)">
            <summary>
            New image processing failed exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.AuthenticityFailed">
            <summary>
            Authenticity failed exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.AuthenticityFailed.#ctor(System.String)">
            <summary>
            New authenticity failed exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.FileException">
            <summary>
            File exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.FileException.#ctor">
            <summary>
            New file exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.FileException.#ctor(System.String)">
            <summary>
            New file exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.FileExists">
            <summary>
            File exists exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.FileExists.#ctor(System.String)">
            <summary>
            New file exists exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.FileOpen">
            <summary>
            File open exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.FileOpen.#ctor(System.String)">
            <summary>
            New file open exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.FileCreation">
            <summary>
            File creation exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.FileCreation.#ctor(System.String)">
            <summary>
            New file creation exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.FileRead">
            <summary>
            File read exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.FileRead.#ctor(System.String)">
            <summary>
            New file read exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.FileWrite">
            <summary>
            File write exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.FileWrite.#ctor(System.String)">
            <summary>
            New file write exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.InvalidFileContent">
            <summary>
            Invalid file content exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.InvalidFileContent.#ctor(System.String)">
            <summary>
            New invalid file content exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.ImageScanFailed">
            <summary>
            Image scan failed exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.ImageScanFailed.#ctor(System.String)">
            <summary>
            New image scan failed exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.InsufficientHardware">
            <summary>
            Insufficient hardware configuration.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.InsufficientHardware.#ctor(System.String)">
            <summary>
            New insufficient hardware configuration.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.CertificateExpired">
            <summary>
            Certificate expired exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.CertificateExpired.#ctor(System.String)">
            <summary>
            New certificate expired exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.CertificateRevoked">
            <summary>
            Certificate revoked exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.CertificateRevoked.#ctor(System.String)">
            <summary>
            New certificate revoked exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Exceptions.ValidationCheckingFailed">
            <summary>
            Validation checking failed exception.
            </summary>
        </member>
        <member name="M:Pr22.Exceptions.ValidationCheckingFailed.#ctor(System.String)">
            <summary>
            New validation checking failed exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Pr22.Processing.FieldReference">
            <summary>
            Class for storing <c>Field</c> identification data.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldReference.Code">
            <summary>
            Internally used value of <see cref="T:Pr22.Processing.Field"/> identification.
            </summary>
        </member>
        <member name="F:Pr22.Processing.FieldReference.Index">
            <summary>
            Ordinal number of the <see cref="T:Pr22.Processing.Field"/> with the same <see cref="F:Pr22.Processing.FieldReference.Code"/>.
            </summary>
        </member>
        <member name="M:Pr22.Processing.FieldReference.#ctor(Pr22.Processing.FieldSource,Pr22.Processing.FieldId)">
            <summary>
            A new <see cref="T:Pr22.Processing.Field"/> identification data.
            </summary>
            <param name="source">Id of the FieldSource.</param>
            <param name="id">Field Id.</param>
        </member>
        <member name="M:Pr22.Processing.FieldReference.ToString">
            <summary>
            Returns string representation of the <c>FieldReference</c>.
            </summary>
            <returns>String representation of the FieldReference.</returns>
        </member>
        <member name="M:Pr22.Processing.FieldReference.op_Explicit(Pr22.Processing.FieldReference)~Pr22.ECardHandling.File">
            <summary>
            Converts <see cref="T:Pr22.ECard"/> data group <c>FieldReference</c> to <see cref="T:Pr22.ECard"/>
            file identifier.
            </summary>
            <param name="r">ECard data group FieldReference.</param>
            <returns>ECard file identifier.</returns>
        </member>
        <member name="M:Pr22.Processing.FieldReference.op_Explicit(Pr22.ECardHandling.File)~Pr22.Processing.FieldReference">
            <summary>
            Converts <see cref="T:Pr22.ECard"/> file identifier to <see cref="T:Pr22.ECard"/> data group
            <c>FieldReference</c>.
            </summary>
            <param name="f">ECard file identifier.</param>
            <returns>ECard data group FieldReference.</returns>
        </member>
        <member name="M:Pr22.Processing.FieldReference.op_Explicit(Pr22.Processing.FieldReference)~Pr22.ECardHandling.AuthProcess">
            <summary>
            Converts <see cref="T:Pr22.ECard"/> digital authentication <c>FieldReference</c> to
            <see cref="T:Pr22.ECard"/> authentication identifier.
            </summary>
            <param name="r">ECard digital authentication FieldReference.</param>
            <returns>ECard authentication identifier.</returns>
        </member>
        <member name="M:Pr22.Processing.FieldReference.op_Explicit(Pr22.ECardHandling.AuthProcess)~Pr22.Processing.FieldReference">
            <summary>
            Converts <see cref="T:Pr22.ECard"/> authentication identifier to <see cref="T:Pr22.ECard"/>
            digital authentication <c>FieldReference</c>.
            </summary>
            <param name="p">ECard authentication identifier.</param>
            <returns>ECard digital authentication FieldReference.</returns>
        </member>
        <member name="P:Pr22.Processing.FieldReference.Source">
            <summary>
            Id of the <see cref="T:Pr22.Processing.FieldSource"/>.
            </summary>
        </member>
        <member name="P:Pr22.Processing.FieldReference.Id">
            <summary>
            The <see cref="T:Pr22.Processing.FieldId"/>.
            </summary>
        </member>
        <member name="T:Pr22.Imaging.DocImage">
            <summary>
            Scanned document image data.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.DocImage.Light">
            <summary>
            The <see cref="T:Pr22.Imaging.Light">illumination</see> used at image scanning.
            </summary>
        </member>
        <member name="F:Pr22.Imaging.DocImage.Image">
            <summary>
            Low level data of the image.
            </summary>
        </member>
        <member name="M:Pr22.Imaging.DocImage.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:Pr22.Imaging.DocImage.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:Pr22.Imaging.DocImage.ToBitmap">
            <summary>
            Returns the image as a System.Drawing.Bitmap object.
            </summary>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:Pr22.Imaging.DocImage.GetImage">
            <summary>
            Returns the <see cref="T:Pr22.Imaging.RawImage"/> object.
            </summary>
            <returns>The <see cref="T:Pr22.Imaging.RawImage"/> object.</returns>
        </member>
        <member name="M:Pr22.Imaging.DocImage.DocView">
            <summary>
            Returns a rotated and cropped image.
            </summary>
            <returns>A <see cref="T:Pr22.Imaging.DocImage"/> object.</returns>
        </member>
        <member name="M:Pr22.Imaging.DocImage.ToPage">
            <summary>
            Converts image to <see cref="T:Pr22.Processing.Page"/> object.
            </summary>
            <returns>The <see cref="T:Pr22.Processing.Page"/> object.</returns>
        </member>
        <member name="M:Pr22.Imaging.DocImage.GenerateLatentImage(System.String)">
            <summary>
            Generates a decoded IPI image for visual inspection.
            </summary>
            <remarks>This method has the same role as <see cref="M:Pr22.Engine.GenerateLatentImage(Pr22.Imaging.DocImage,System.String)"/>.</remarks>
            <param name="decodingParams">IPI image decoding parameters.</param>
            <returns>Result image.</returns>
        </member>
        <member name="M:Pr22.Imaging.DocImage.ReadField(Pr22.Util.Variant)">
            <summary>
            Reads character or barcode data from an image.
            </summary>
            <remarks>This method has the same role as <see cref="M:Pr22.Engine.ReadField(Pr22.Imaging.DocImage,Pr22.Util.Variant)"/>.</remarks>
            <param name="readingParams">Reading parameters that are described in the Passport Reader
            reference manual.</param>
            <returns>The result data structure.</returns>
        </member>
    </members>
</doc>
